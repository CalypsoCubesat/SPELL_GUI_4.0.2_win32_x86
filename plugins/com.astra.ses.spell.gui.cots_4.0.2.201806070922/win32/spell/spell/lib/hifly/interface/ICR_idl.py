# Python stubs generated by omniidl from ICR.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "ICR"
#
__name__ = "spell.lib.hifly.interface.ICR"
_0_ICR = omniORB.openModule("spell.lib.hifly.interface.ICR", r"ICR.idl")
_0_ICR__POA = omniORB.openModule("spell.lib.hifly.interface.ICR__POA", r"ICR.idl")


# typedef ... CRResultValue
class CRResultValue:
    _NP_RepositoryId = "IDL:ICR/CRResultValue:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ICR.CRResultValue = CRResultValue
_0_ICR._d_CRResultValue  = omniORB.tcInternal.tv_long
_0_ICR._ad_CRResultValue = (omniORB.tcInternal.tv_alias, CRResultValue._NP_RepositoryId, "CRResultValue", omniORB.tcInternal.tv_long)
_0_ICR._tc_CRResultValue = omniORB.tcInternal.createTypeCode(_0_ICR._ad_CRResultValue)
omniORB.registerType(CRResultValue._NP_RepositoryId, _0_ICR._ad_CRResultValue, _0_ICR._tc_CRResultValue)
del CRResultValue
_0_ICR.OK = 0
_0_ICR.NO_ERROR = 0
_0_ICR.UNKNOWN_ERROR = 1
_0_ICR.UNKNOWN_RESOURCE_ID = 2
_0_ICR.MANUAL_ALLOCATE_ERROR = 3
_0_ICR.INTERNAL_COMM_PROBLEM = 4
_0_ICR.NIL_CORBA_RESOURCE = 5
_0_ICR.ERROR_SETTING_BAND = 6
_0_ICR.DISABLE_ERROR = 7
_0_ICR.ENABLE_ERROR = 8
_0_ICR.CHANNEL_ERROR = 9
_0_ICR.PROTOCOL_ERROR = 10

# interface Mngr
_0_ICR._d_Mngr = (omniORB.tcInternal.tv_objref, "IDL:ICR/Mngr:1.0", "Mngr")
omniORB.typeMapping["IDL:ICR/Mngr:1.0"] = _0_ICR._d_Mngr
_0_ICR.Mngr = omniORB.newEmptyClass()
class Mngr :
    _NP_RepositoryId = _0_ICR._d_Mngr[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    ServiceName = "ICRMngr"


_0_ICR.Mngr = Mngr
_0_ICR._tc_Mngr = omniORB.tcInternal.createTypeCode(_0_ICR._d_Mngr)
omniORB.registerType(Mngr._NP_RepositoryId, _0_ICR._d_Mngr, _0_ICR._tc_Mngr)

# Mngr operations and attributes
Mngr._d_enable = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:ICR/CRResultValue:1.0"], ), None)
Mngr._d_enableWithBand = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:ICR/CRResultValue:1.0"], ), None)
Mngr._d_disable = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:ICR/CRResultValue:1.0"], ), None)

# Mngr object reference
class _objref_Mngr (CORBA.Object):
    _NP_RepositoryId = Mngr._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def enable(self, *args):
        return _omnipy.invoke(self, "enable", _0_ICR.Mngr._d_enable, args)

    def enableWithBand(self, *args):
        return _omnipy.invoke(self, "enableWithBand", _0_ICR.Mngr._d_enableWithBand, args)

    def disable(self, *args):
        return _omnipy.invoke(self, "disable", _0_ICR.Mngr._d_disable, args)

    __methods__ = ["enable", "enableWithBand", "disable"] + CORBA.Object.__methods__

omniORB.registerObjref(Mngr._NP_RepositoryId, _objref_Mngr)
_0_ICR._objref_Mngr = _objref_Mngr
del Mngr, _objref_Mngr

# Mngr skeleton
__name__ = "spell.lib.hifly.interface.ICR__POA"
class Mngr (PortableServer.Servant):
    _NP_RepositoryId = _0_ICR.Mngr._NP_RepositoryId


    _omni_op_d = {"enable": _0_ICR.Mngr._d_enable, "enableWithBand": _0_ICR.Mngr._d_enableWithBand, "disable": _0_ICR.Mngr._d_disable}

Mngr._omni_skeleton = Mngr
_0_ICR__POA.Mngr = Mngr
omniORB.registerSkeleton(Mngr._NP_RepositoryId, Mngr)
del Mngr
__name__ = "spell.lib.hifly.interface.ICR"

#
# End of module "ICR"
#
__name__ = "spell.lib.hifly.interface.ICR_idl"

_exported_modules = ( "spell.lib.hifly.interface.ICR", )

# The end.
