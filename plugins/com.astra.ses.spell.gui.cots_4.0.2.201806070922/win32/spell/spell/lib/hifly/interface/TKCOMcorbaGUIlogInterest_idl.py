# Python stubs generated by omniidl from TKCOMcorbaGUIlogInterest.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "_GlobalIDL"
#
__name__ = "spell.lib.hifly.interface._GlobalIDL"
_0__GlobalIDL = omniORB.openModule("spell.lib.hifly.interface._GlobalIDL", r"TKCOMcorbaGUIlogInterest.idl")
_0__GlobalIDL__POA = omniORB.openModule("spell.lib.hifly.interface._GlobalIDL__POA", r"TKCOMcorbaGUIlogInterest.idl")


# interface TKCOMcorbaGUIlogInterest
_0__GlobalIDL._d_TKCOMcorbaGUIlogInterest = (omniORB.tcInternal.tv_objref, "IDL:TKCOMcorbaGUIlogInterest:1.0", "TKCOMcorbaGUIlogInterest")
omniORB.typeMapping["IDL:TKCOMcorbaGUIlogInterest:1.0"] = _0__GlobalIDL._d_TKCOMcorbaGUIlogInterest
_0__GlobalIDL.TKCOMcorbaGUIlogInterest = omniORB.newEmptyClass()
class TKCOMcorbaGUIlogInterest :
    _NP_RepositoryId = _0__GlobalIDL._d_TKCOMcorbaGUIlogInterest[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.TKCOMcorbaGUIlogInterest = TKCOMcorbaGUIlogInterest
_0__GlobalIDL._tc_TKCOMcorbaGUIlogInterest = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_TKCOMcorbaGUIlogInterest)
omniORB.registerType(TKCOMcorbaGUIlogInterest._NP_RepositoryId, _0__GlobalIDL._d_TKCOMcorbaGUIlogInterest, _0__GlobalIDL._tc_TKCOMcorbaGUIlogInterest)

# TKCOMcorbaGUIlogInterest operations and attributes
TKCOMcorbaGUIlogInterest._d_addText = (((omniORB.tcInternal.tv_string,0), ), (), None)
TKCOMcorbaGUIlogInterest._d_restartLog = ((), (), None)

# TKCOMcorbaGUIlogInterest object reference
class _objref_TKCOMcorbaGUIlogInterest (CORBA.Object):
    _NP_RepositoryId = TKCOMcorbaGUIlogInterest._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def addText(self, *args):
        return _omnipy.invoke(self, "addText", _0__GlobalIDL.TKCOMcorbaGUIlogInterest._d_addText, args)

    def restartLog(self, *args):
        return _omnipy.invoke(self, "restartLog", _0__GlobalIDL.TKCOMcorbaGUIlogInterest._d_restartLog, args)

    __methods__ = ["addText", "restartLog"] + CORBA.Object.__methods__

omniORB.registerObjref(TKCOMcorbaGUIlogInterest._NP_RepositoryId, _objref_TKCOMcorbaGUIlogInterest)
_0__GlobalIDL._objref_TKCOMcorbaGUIlogInterest = _objref_TKCOMcorbaGUIlogInterest
del TKCOMcorbaGUIlogInterest, _objref_TKCOMcorbaGUIlogInterest

# TKCOMcorbaGUIlogInterest skeleton
__name__ = "spell.lib.hifly.interface._GlobalIDL__POA"
class TKCOMcorbaGUIlogInterest (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.TKCOMcorbaGUIlogInterest._NP_RepositoryId


    _omni_op_d = {"addText": _0__GlobalIDL.TKCOMcorbaGUIlogInterest._d_addText, "restartLog": _0__GlobalIDL.TKCOMcorbaGUIlogInterest._d_restartLog}

TKCOMcorbaGUIlogInterest._omni_skeleton = TKCOMcorbaGUIlogInterest
_0__GlobalIDL__POA.TKCOMcorbaGUIlogInterest = TKCOMcorbaGUIlogInterest
omniORB.registerSkeleton(TKCOMcorbaGUIlogInterest._NP_RepositoryId, TKCOMcorbaGUIlogInterest)
del TKCOMcorbaGUIlogInterest
__name__ = "spell.lib.hifly.interface._GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "spell.lib.hifly.interface.TKCOMcorbaGUIlogInterest_idl"

_exported_modules = ( "spell.lib.hifly.interface._GlobalIDL", )

# The end.
