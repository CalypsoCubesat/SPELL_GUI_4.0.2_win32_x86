# Python stubs generated by omniidl from IAUTH.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "IAUTH"
#
__name__ = "spell.lib.hifly.interface.IAUTH"
_0_IAUTH = omniORB.openModule("spell.lib.hifly.interface.IAUTH", r"IAUTH.idl")
_0_IAUTH__POA = omniORB.openModule("spell.lib.hifly.interface.IAUTH__POA", r"IAUTH.idl")


# exception NotFound
_0_IAUTH.NotFound = omniORB.newEmptyClass()
class NotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:IAUTH/NotFound:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_IAUTH.NotFound = NotFound
_0_IAUTH._d_NotFound  = (omniORB.tcInternal.tv_except, NotFound, NotFound._NP_RepositoryId, "NotFound")
_0_IAUTH._tc_NotFound = omniORB.tcInternal.createTypeCode(_0_IAUTH._d_NotFound)
omniORB.registerType(NotFound._NP_RepositoryId, _0_IAUTH._d_NotFound, _0_IAUTH._tc_NotFound)
del NotFound

# exception NoAccess
_0_IAUTH.NoAccess = omniORB.newEmptyClass()
class NoAccess (CORBA.UserException):
    _NP_RepositoryId = "IDL:IAUTH/NoAccess:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_IAUTH.NoAccess = NoAccess
_0_IAUTH._d_NoAccess  = (omniORB.tcInternal.tv_except, NoAccess, NoAccess._NP_RepositoryId, "NoAccess")
_0_IAUTH._tc_NoAccess = omniORB.tcInternal.createTypeCode(_0_IAUTH._d_NoAccess)
omniORB.registerType(NoAccess._NP_RepositoryId, _0_IAUTH._d_NoAccess, _0_IAUTH._tc_NoAccess)
del NoAccess

# typedef ... IdString
class IdString:
    _NP_RepositoryId = "IDL:IAUTH/IdString:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IAUTH.IdString = IdString
_0_IAUTH._d_IdString  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0)
_0_IAUTH._ad_IdString = (omniORB.tcInternal.tv_alias, IdString._NP_RepositoryId, "IdString", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0))
_0_IAUTH._tc_IdString = omniORB.tcInternal.createTypeCode(_0_IAUTH._ad_IdString)
omniORB.registerType(IdString._NP_RepositoryId, _0_IAUTH._ad_IdString, _0_IAUTH._tc_IdString)
del IdString

# interface AUTHserver
_0_IAUTH._d_AUTHserver = (omniORB.tcInternal.tv_objref, "IDL:IAUTH/AUTHserver:1.0", "AUTHserver")
omniORB.typeMapping["IDL:IAUTH/AUTHserver:1.0"] = _0_IAUTH._d_AUTHserver
_0_IAUTH.AUTHserver = omniORB.newEmptyClass()
class AUTHserver :
    _NP_RepositoryId = _0_IAUTH._d_AUTHserver[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_IAUTH.AUTHserver = AUTHserver
_0_IAUTH._tc_AUTHserver = omniORB.tcInternal.createTypeCode(_0_IAUTH._d_AUTHserver)
omniORB.registerType(AUTHserver._NP_RepositoryId, _0_IAUTH._d_AUTHserver, _0_IAUTH._tc_AUTHserver)

# AUTHserver operations and attributes
AUTHserver._d_getObject = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:omg.org/CORBA/Object:1.0"], ), {_0_IAUTH.NotFound._NP_RepositoryId: _0_IAUTH._d_NotFound})

# AUTHserver object reference
class _objref_AUTHserver (CORBA.Object):
    _NP_RepositoryId = AUTHserver._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getObject(self, *args):
        return _omnipy.invoke(self, "getObject", _0_IAUTH.AUTHserver._d_getObject, args)

    __methods__ = ["getObject"] + CORBA.Object.__methods__

omniORB.registerObjref(AUTHserver._NP_RepositoryId, _objref_AUTHserver)
_0_IAUTH._objref_AUTHserver = _objref_AUTHserver
del AUTHserver, _objref_AUTHserver

# AUTHserver skeleton
__name__ = "spell.lib.hifly.interface.IAUTH__POA"
class AUTHserver (PortableServer.Servant):
    _NP_RepositoryId = _0_IAUTH.AUTHserver._NP_RepositoryId


    _omni_op_d = {"getObject": _0_IAUTH.AUTHserver._d_getObject}

AUTHserver._omni_skeleton = AUTHserver
_0_IAUTH__POA.AUTHserver = AUTHserver
omniORB.registerSkeleton(AUTHserver._NP_RepositoryId, AUTHserver)
del AUTHserver
__name__ = "spell.lib.hifly.interface.IAUTH"

# interface AUTHserverMngr
_0_IAUTH._d_AUTHserverMngr = (omniORB.tcInternal.tv_objref, "IDL:IAUTH/AUTHserverMngr:1.0", "AUTHserverMngr")
omniORB.typeMapping["IDL:IAUTH/AUTHserverMngr:1.0"] = _0_IAUTH._d_AUTHserverMngr
_0_IAUTH.AUTHserverMngr = omniORB.newEmptyClass()
class AUTHserverMngr :
    _NP_RepositoryId = _0_IAUTH._d_AUTHserverMngr[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    ServiceName = "EXIF_AUTH"


_0_IAUTH.AUTHserverMngr = AUTHserverMngr
_0_IAUTH._tc_AUTHserverMngr = omniORB.tcInternal.createTypeCode(_0_IAUTH._d_AUTHserverMngr)
omniORB.registerType(AUTHserverMngr._NP_RepositoryId, _0_IAUTH._d_AUTHserverMngr, _0_IAUTH._tc_AUTHserverMngr)

# AUTHserverMngr operations and attributes
AUTHserverMngr._d_getAuthenticationServer = ((omniORB.typeMapping["IDL:IAUTH/IdString:1.0"], ), (omniORB.typeMapping["IDL:IAUTH/AUTHserver:1.0"], ), {_0_IAUTH.NoAccess._NP_RepositoryId: _0_IAUTH._d_NoAccess})

# AUTHserverMngr object reference
class _objref_AUTHserverMngr (CORBA.Object):
    _NP_RepositoryId = AUTHserverMngr._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getAuthenticationServer(self, *args):
        return _omnipy.invoke(self, "getAuthenticationServer", _0_IAUTH.AUTHserverMngr._d_getAuthenticationServer, args)

    __methods__ = ["getAuthenticationServer"] + CORBA.Object.__methods__

omniORB.registerObjref(AUTHserverMngr._NP_RepositoryId, _objref_AUTHserverMngr)
_0_IAUTH._objref_AUTHserverMngr = _objref_AUTHserverMngr
del AUTHserverMngr, _objref_AUTHserverMngr

# AUTHserverMngr skeleton
__name__ = "spell.lib.hifly.interface.IAUTH__POA"
class AUTHserverMngr (PortableServer.Servant):
    _NP_RepositoryId = _0_IAUTH.AUTHserverMngr._NP_RepositoryId


    _omni_op_d = {"getAuthenticationServer": _0_IAUTH.AUTHserverMngr._d_getAuthenticationServer}

AUTHserverMngr._omni_skeleton = AUTHserverMngr
_0_IAUTH__POA.AUTHserverMngr = AUTHserverMngr
omniORB.registerSkeleton(AUTHserverMngr._NP_RepositoryId, AUTHserverMngr)
del AUTHserverMngr
__name__ = "spell.lib.hifly.interface.IAUTH"

#
# End of module "IAUTH"
#
__name__ = "spell.lib.hifly.interface.IAUTH_idl"

_exported_modules = ( "spell.lib.hifly.interface.IAUTH", )

# The end.
