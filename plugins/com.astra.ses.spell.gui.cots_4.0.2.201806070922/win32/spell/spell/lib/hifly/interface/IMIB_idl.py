# Python stubs generated by omniidl from IMIB.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "IBASE.idl"
import spell.lib.hifly.interface.IBASE_idl
_0_IBASE = omniORB.openModule("spell.lib.hifly.interface.IBASE")
_0_IBASE__POA = omniORB.openModule("spell.lib.hifly.interface.IBASE__POA")

#
# Start of module "IMIB"
#
__name__ = "spell.lib.hifly.interface.IMIB"
_0_IMIB = omniORB.openModule("spell.lib.hifly.interface.IMIB", r"IMIB.idl")
_0_IMIB__POA = omniORB.openModule("spell.lib.hifly.interface.IMIB__POA", r"IMIB.idl")


# typedef ... AttributeType
class AttributeType:
    _NP_RepositoryId = "IDL:IMIB/AttributeType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.AttributeType = AttributeType
_0_IMIB._d_AttributeType  = omniORB.tcInternal.tv_long
_0_IMIB._ad_AttributeType = (omniORB.tcInternal.tv_alias, AttributeType._NP_RepositoryId, "AttributeType", omniORB.tcInternal.tv_long)
_0_IMIB._tc_AttributeType = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_AttributeType)
omniORB.registerType(AttributeType._NP_RepositoryId, _0_IMIB._ad_AttributeType, _0_IMIB._tc_AttributeType)
del AttributeType
_0_IMIB.DEFAULT_NAME = 1
_0_IMIB.DEFAULT_DESCRIPTION = 2

# struct DataColumn
_0_IMIB.DataColumn = omniORB.newEmptyClass()
class DataColumn (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/DataColumn:1.0"

    def __init__(self, m_columnTag, m_values):
        self.m_columnTag = m_columnTag
        self.m_values = m_values

_0_IMIB.DataColumn = DataColumn
_0_IMIB._d_DataColumn  = (omniORB.tcInternal.tv_struct, DataColumn, DataColumn._NP_RepositoryId, "DataColumn", "m_columnTag", omniORB.typeMapping["IDL:IMIB/AttributeType:1.0"], "m_values", omniORB.typeMapping["IDL:IBASE/Strings:1.0"])
_0_IMIB._tc_DataColumn = omniORB.tcInternal.createTypeCode(_0_IMIB._d_DataColumn)
omniORB.registerType(DataColumn._NP_RepositoryId, _0_IMIB._d_DataColumn, _0_IMIB._tc_DataColumn)
del DataColumn

# typedef ... DataTable
class DataTable:
    _NP_RepositoryId = "IDL:IMIB/DataTable:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.DataTable = DataTable
_0_IMIB._d_DataTable  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/DataColumn:1.0"], 0)
_0_IMIB._ad_DataTable = (omniORB.tcInternal.tv_alias, DataTable._NP_RepositoryId, "DataTable", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/DataColumn:1.0"], 0))
_0_IMIB._tc_DataTable = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_DataTable)
omniORB.registerType(DataTable._NP_RepositoryId, _0_IMIB._ad_DataTable, _0_IMIB._tc_DataTable)
del DataTable
_0_IMIB.NORMAL = "N"

# typedef ... ParamValueType
class ParamValueType:
    _NP_RepositoryId = "IDL:IMIB/ParamValueType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.ParamValueType = ParamValueType
_0_IMIB._d_ParamValueType  = omniORB.tcInternal.tv_short
_0_IMIB._ad_ParamValueType = (omniORB.tcInternal.tv_alias, ParamValueType._NP_RepositoryId, "ParamValueType", omniORB.tcInternal.tv_short)
_0_IMIB._tc_ParamValueType = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_ParamValueType)
omniORB.registerType(ParamValueType._NP_RepositoryId, _0_IMIB._ad_ParamValueType, _0_IMIB._tc_ParamValueType)
del ParamValueType
_0_IMIB.PARAM_RAW_VALUE = 16
_0_IMIB.PARAM_ENG_VALUE = 32
_0_IMIB.PARAM_SYN_VALUE = 64
_0_IMIB.PARAM_SOURCE_VALUE = 256
_0_IMIB.PARAM_DEFAULT_VALUE = 512
_0_IMIB.PARAM_OOL = 4096
_0_IMIB.PARAM_SCC = 8192

# typedef ... ParamAttributeType
class ParamAttributeType:
    _NP_RepositoryId = "IDL:IMIB/ParamAttributeType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.ParamAttributeType = ParamAttributeType
_0_IMIB._d_ParamAttributeType  = omniORB.tcInternal.tv_short
_0_IMIB._ad_ParamAttributeType = (omniORB.tcInternal.tv_alias, ParamAttributeType._NP_RepositoryId, "ParamAttributeType", omniORB.tcInternal.tv_short)
_0_IMIB._tc_ParamAttributeType = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_ParamAttributeType)
omniORB.registerType(ParamAttributeType._NP_RepositoryId, _0_IMIB._ad_ParamAttributeType, _0_IMIB._tc_ParamAttributeType)
del ParamAttributeType
_0_IMIB.PARAM_NAME = 1
_0_IMIB.PARAM_DESCRIPTION = 2
_0_IMIB.PARAM_VALUE_FLAGS = 4
_0_IMIB.PARAM_RAW_VALUE_UNIT = 16
_0_IMIB.PARAM_ENG_VALUE_UNIT = 32
_0_IMIB.PARAM_SYN_VALUE_UNIT = 64
_0_IMIB.PARAM_SOURCE_VALUE_UNIT = 256
_0_IMIB.PARAM_DEFAULT_VALUE_UNIT = 512

# struct ParamDef
_0_IMIB.ParamDef = omniORB.newEmptyClass()
class ParamDef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/ParamDef:1.0"

    def __init__(self, m_name, m_description, m_valueFlags, m_rawValueUnit, m_engValueUnit, m_synValueUnit, m_sourceValueUnit, m_defaultValueUnit):
        self.m_name = m_name
        self.m_description = m_description
        self.m_valueFlags = m_valueFlags
        self.m_rawValueUnit = m_rawValueUnit
        self.m_engValueUnit = m_engValueUnit
        self.m_synValueUnit = m_synValueUnit
        self.m_sourceValueUnit = m_sourceValueUnit
        self.m_defaultValueUnit = m_defaultValueUnit

_0_IMIB.ParamDef = ParamDef
_0_IMIB._d_ParamDef  = (omniORB.tcInternal.tv_struct, ParamDef, ParamDef._NP_RepositoryId, "ParamDef", "m_name", (omniORB.tcInternal.tv_string,0), "m_description", (omniORB.tcInternal.tv_string,0), "m_valueFlags", omniORB.typeMapping["IDL:IMIB/ParamValueType:1.0"], "m_rawValueUnit", (omniORB.tcInternal.tv_string,0), "m_engValueUnit", (omniORB.tcInternal.tv_string,0), "m_synValueUnit", (omniORB.tcInternal.tv_string,0), "m_sourceValueUnit", (omniORB.tcInternal.tv_string,0), "m_defaultValueUnit", (omniORB.tcInternal.tv_string,0))
_0_IMIB._tc_ParamDef = omniORB.tcInternal.createTypeCode(_0_IMIB._d_ParamDef)
omniORB.registerType(ParamDef._NP_RepositoryId, _0_IMIB._d_ParamDef, _0_IMIB._tc_ParamDef)
del ParamDef

# typedef ... ParamDefs
class ParamDefs:
    _NP_RepositoryId = "IDL:IMIB/ParamDefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.ParamDefs = ParamDefs
_0_IMIB._d_ParamDefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/ParamDef:1.0"], 0)
_0_IMIB._ad_ParamDefs = (omniORB.tcInternal.tv_alias, ParamDefs._NP_RepositoryId, "ParamDefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/ParamDef:1.0"], 0))
_0_IMIB._tc_ParamDefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_ParamDefs)
omniORB.registerType(ParamDefs._NP_RepositoryId, _0_IMIB._ad_ParamDefs, _0_IMIB._tc_ParamDefs)
del ParamDefs

# typedef ... TaskAttributeType
class TaskAttributeType:
    _NP_RepositoryId = "IDL:IMIB/TaskAttributeType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.TaskAttributeType = TaskAttributeType
_0_IMIB._d_TaskAttributeType  = omniORB.tcInternal.tv_long
_0_IMIB._ad_TaskAttributeType = (omniORB.tcInternal.tv_alias, TaskAttributeType._NP_RepositoryId, "TaskAttributeType", omniORB.tcInternal.tv_long)
_0_IMIB._tc_TaskAttributeType = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_TaskAttributeType)
omniORB.registerType(TaskAttributeType._NP_RepositoryId, _0_IMIB._ad_TaskAttributeType, _0_IMIB._tc_TaskAttributeType)
del TaskAttributeType
_0_IMIB.TASK_NAME = 1
_0_IMIB.TASK_DESCRIPTION = 2

# struct TaskParamDef
_0_IMIB.TaskParamDef = omniORB.newEmptyClass()
class TaskParamDef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/TaskParamDef:1.0"

    def __init__(self, m_name, m_description, m_isEditable, m_engValueIsDefault, m_unit, m_defaultRadix, m_valueType, m_defaultValue, m_repeatSize):
        self.m_name = m_name
        self.m_description = m_description
        self.m_isEditable = m_isEditable
        self.m_engValueIsDefault = m_engValueIsDefault
        self.m_unit = m_unit
        self.m_defaultRadix = m_defaultRadix
        self.m_valueType = m_valueType
        self.m_defaultValue = m_defaultValue
        self.m_repeatSize = m_repeatSize

_0_IMIB.TaskParamDef = TaskParamDef
_0_IMIB._d_TaskParamDef  = (omniORB.tcInternal.tv_struct, TaskParamDef, TaskParamDef._NP_RepositoryId, "TaskParamDef", "m_name", (omniORB.tcInternal.tv_string,0), "m_description", (omniORB.tcInternal.tv_string,0), "m_isEditable", omniORB.tcInternal.tv_boolean, "m_engValueIsDefault", omniORB.tcInternal.tv_boolean, "m_unit", (omniORB.tcInternal.tv_string,0), "m_defaultRadix", omniORB.typeMapping["IDL:IBASE/Radix:1.0"], "m_valueType", omniORB.typeMapping["IDL:IBASE/VariantState:1.0"], "m_defaultValue", omniORB.typeMapping["IDL:IBASE/Variant:1.0"], "m_repeatSize", omniORB.tcInternal.tv_long)
_0_IMIB._tc_TaskParamDef = omniORB.tcInternal.createTypeCode(_0_IMIB._d_TaskParamDef)
omniORB.registerType(TaskParamDef._NP_RepositoryId, _0_IMIB._d_TaskParamDef, _0_IMIB._tc_TaskParamDef)
del TaskParamDef

# typedef ... TaskParamDefs
class TaskParamDefs:
    _NP_RepositoryId = "IDL:IMIB/TaskParamDefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.TaskParamDefs = TaskParamDefs
_0_IMIB._d_TaskParamDefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/TaskParamDef:1.0"], 0)
_0_IMIB._ad_TaskParamDefs = (omniORB.tcInternal.tv_alias, TaskParamDefs._NP_RepositoryId, "TaskParamDefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/TaskParamDef:1.0"], 0))
_0_IMIB._tc_TaskParamDefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_TaskParamDefs)
omniORB.registerType(TaskParamDefs._NP_RepositoryId, _0_IMIB._ad_TaskParamDefs, _0_IMIB._tc_TaskParamDefs)
del TaskParamDefs

# struct TaskDef
_0_IMIB.TaskDef = omniORB.newEmptyClass()
class TaskDef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/TaskDef:1.0"

    def __init__(self, m_name, m_description, m_params):
        self.m_name = m_name
        self.m_description = m_description
        self.m_params = m_params

_0_IMIB.TaskDef = TaskDef
_0_IMIB._d_TaskDef  = (omniORB.tcInternal.tv_struct, TaskDef, TaskDef._NP_RepositoryId, "TaskDef", "m_name", (omniORB.tcInternal.tv_string,0), "m_description", (omniORB.tcInternal.tv_string,0), "m_params", omniORB.typeMapping["IDL:IMIB/TaskParamDefs:1.0"])
_0_IMIB._tc_TaskDef = omniORB.tcInternal.createTypeCode(_0_IMIB._d_TaskDef)
omniORB.registerType(TaskDef._NP_RepositoryId, _0_IMIB._d_TaskDef, _0_IMIB._tc_TaskDef)
del TaskDef

# typedef ... TaskDefs
class TaskDefs:
    _NP_RepositoryId = "IDL:IMIB/TaskDefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.TaskDefs = TaskDefs
_0_IMIB._d_TaskDefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/TaskDef:1.0"], 0)
_0_IMIB._ad_TaskDefs = (omniORB.tcInternal.tv_alias, TaskDefs._NP_RepositoryId, "TaskDefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/TaskDef:1.0"], 0))
_0_IMIB._tc_TaskDefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_TaskDefs)
omniORB.registerType(TaskDefs._NP_RepositoryId, _0_IMIB._ad_TaskDefs, _0_IMIB._tc_TaskDefs)
del TaskDefs

# typedef ... CommandAttributeType
class CommandAttributeType:
    _NP_RepositoryId = "IDL:IMIB/CommandAttributeType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.CommandAttributeType = CommandAttributeType
_0_IMIB._d_CommandAttributeType  = omniORB.tcInternal.tv_long
_0_IMIB._ad_CommandAttributeType = (omniORB.tcInternal.tv_alias, CommandAttributeType._NP_RepositoryId, "CommandAttributeType", omniORB.tcInternal.tv_long)
_0_IMIB._tc_CommandAttributeType = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_CommandAttributeType)
omniORB.registerType(CommandAttributeType._NP_RepositoryId, _0_IMIB._ad_CommandAttributeType, _0_IMIB._tc_CommandAttributeType)
del CommandAttributeType
_0_IMIB.COMMAND_NAME = 1
_0_IMIB.COMMAND_DESCRIPTION = 2

# typedef ... CommandDef
class CommandDef (_0_IMIB.TaskDef):
    _NP_RepositoryId = "IDL:IMIB/CommandDef:1.0"

_0_IMIB.CommandDef = CommandDef
_0_IMIB._d_CommandDef  = omniORB.typeMapping["IDL:IMIB/TaskDef:1.0"]
_0_IMIB._ad_CommandDef = (omniORB.tcInternal.tv_alias, CommandDef._NP_RepositoryId, "CommandDef", omniORB.typeMapping["IDL:IMIB/TaskDef:1.0"])
_0_IMIB._tc_CommandDef = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_CommandDef)
omniORB.registerType(CommandDef._NP_RepositoryId, _0_IMIB._ad_CommandDef, _0_IMIB._tc_CommandDef)
del CommandDef

# typedef ... CommandDefs
class CommandDefs:
    _NP_RepositoryId = "IDL:IMIB/CommandDefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.CommandDefs = CommandDefs
_0_IMIB._d_CommandDefs  = omniORB.typeMapping["IDL:IMIB/TaskDefs:1.0"]
_0_IMIB._ad_CommandDefs = (omniORB.tcInternal.tv_alias, CommandDefs._NP_RepositoryId, "CommandDefs", omniORB.typeCodeMapping["IDL:IMIB/TaskDefs:1.0"]._d)
_0_IMIB._tc_CommandDefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_CommandDefs)
omniORB.registerType(CommandDefs._NP_RepositoryId, _0_IMIB._ad_CommandDefs, _0_IMIB._tc_CommandDefs)
del CommandDefs

# typedef ... ANDattributeType
class ANDattributeType:
    _NP_RepositoryId = "IDL:IMIB/ANDattributeType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.ANDattributeType = ANDattributeType
_0_IMIB._d_ANDattributeType  = omniORB.tcInternal.tv_short
_0_IMIB._ad_ANDattributeType = (omniORB.tcInternal.tv_alias, ANDattributeType._NP_RepositoryId, "ANDattributeType", omniORB.tcInternal.tv_short)
_0_IMIB._tc_ANDattributeType = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_ANDattributeType)
omniORB.registerType(ANDattributeType._NP_RepositoryId, _0_IMIB._ad_ANDattributeType, _0_IMIB._tc_ANDattributeType)
del ANDattributeType
_0_IMIB.AND_NAME = 1
_0_IMIB.AND_DESCRIPTION = 2
_0_IMIB.AND_ISAND64 = 4

# struct ANDparamDef
_0_IMIB.ANDparamDef = omniORB.newEmptyClass()
class ANDparamDef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/ANDparamDef:1.0"

    def __init__(self, m_name, m_description, m_orderInDisplay, m_initValue, m_format, m_unit, m_displayIfInvalid):
        self.m_name = m_name
        self.m_description = m_description
        self.m_orderInDisplay = m_orderInDisplay
        self.m_initValue = m_initValue
        self.m_format = m_format
        self.m_unit = m_unit
        self.m_displayIfInvalid = m_displayIfInvalid

_0_IMIB.ANDparamDef = ANDparamDef
_0_IMIB._d_ANDparamDef  = (omniORB.tcInternal.tv_struct, ANDparamDef, ANDparamDef._NP_RepositoryId, "ANDparamDef", "m_name", (omniORB.tcInternal.tv_string,0), "m_description", (omniORB.tcInternal.tv_string,0), "m_orderInDisplay", omniORB.tcInternal.tv_short, "m_initValue", omniORB.typeMapping["IDL:IMIB/ParamValueType:1.0"], "m_format", omniORB.typeMapping["IDL:IBASE/Radix:1.0"], "m_unit", (omniORB.tcInternal.tv_string,0), "m_displayIfInvalid", omniORB.tcInternal.tv_boolean)
_0_IMIB._tc_ANDparamDef = omniORB.tcInternal.createTypeCode(_0_IMIB._d_ANDparamDef)
omniORB.registerType(ANDparamDef._NP_RepositoryId, _0_IMIB._d_ANDparamDef, _0_IMIB._tc_ANDparamDef)
del ANDparamDef

# typedef ... ANDparamDefs
class ANDparamDefs:
    _NP_RepositoryId = "IDL:IMIB/ANDparamDefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.ANDparamDefs = ANDparamDefs
_0_IMIB._d_ANDparamDefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/ANDparamDef:1.0"], 0)
_0_IMIB._ad_ANDparamDefs = (omniORB.tcInternal.tv_alias, ANDparamDefs._NP_RepositoryId, "ANDparamDefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/ANDparamDef:1.0"], 0))
_0_IMIB._tc_ANDparamDefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_ANDparamDefs)
omniORB.registerType(ANDparamDefs._NP_RepositoryId, _0_IMIB._ad_ANDparamDefs, _0_IMIB._tc_ANDparamDefs)
del ANDparamDefs

# struct ANDdef
_0_IMIB.ANDdef = omniORB.newEmptyClass()
class ANDdef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/ANDdef:1.0"

    def __init__(self, m_name, m_description, m_isAND64, m_paramEntries):
        self.m_name = m_name
        self.m_description = m_description
        self.m_isAND64 = m_isAND64
        self.m_paramEntries = m_paramEntries

_0_IMIB.ANDdef = ANDdef
_0_IMIB._d_ANDdef  = (omniORB.tcInternal.tv_struct, ANDdef, ANDdef._NP_RepositoryId, "ANDdef", "m_name", (omniORB.tcInternal.tv_string,0), "m_description", (omniORB.tcInternal.tv_string,0), "m_isAND64", omniORB.tcInternal.tv_boolean, "m_paramEntries", omniORB.typeMapping["IDL:IMIB/ANDparamDefs:1.0"])
_0_IMIB._tc_ANDdef = omniORB.tcInternal.createTypeCode(_0_IMIB._d_ANDdef)
omniORB.registerType(ANDdef._NP_RepositoryId, _0_IMIB._d_ANDdef, _0_IMIB._tc_ANDdef)
del ANDdef

# typedef ... ANDdefs
class ANDdefs:
    _NP_RepositoryId = "IDL:IMIB/ANDdefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.ANDdefs = ANDdefs
_0_IMIB._d_ANDdefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/ANDdef:1.0"], 0)
_0_IMIB._ad_ANDdefs = (omniORB.tcInternal.tv_alias, ANDdefs._NP_RepositoryId, "ANDdefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/ANDdef:1.0"], 0))
_0_IMIB._tc_ANDdefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_ANDdefs)
omniORB.registerType(ANDdefs._NP_RepositoryId, _0_IMIB._ad_ANDdefs, _0_IMIB._tc_ANDdefs)
del ANDdefs

# typedef ... GRDattributeType
class GRDattributeType:
    _NP_RepositoryId = "IDL:IMIB/GRDattributeType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.GRDattributeType = GRDattributeType
_0_IMIB._d_GRDattributeType  = omniORB.tcInternal.tv_short
_0_IMIB._ad_GRDattributeType = (omniORB.tcInternal.tv_alias, GRDattributeType._NP_RepositoryId, "GRDattributeType", omniORB.tcInternal.tv_short)
_0_IMIB._tc_GRDattributeType = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_GRDattributeType)
omniORB.registerType(GRDattributeType._NP_RepositoryId, _0_IMIB._ad_GRDattributeType, _0_IMIB._tc_GRDattributeType)
del GRDattributeType
_0_IMIB.GRD_NAME = 1
_0_IMIB.GRD_DESCRIPTION = 2
_0_IMIB.GRD_PLOTTYPE = 4
_0_IMIB.GRD_UPDATERATE = 8
_0_IMIB.GRD_ISSCROLLING = 16
_0_IMIB.GRD_AUTOHARDCOPY = 32
_0_IMIB.GRD_XPARAMETERNO = 64
_0_IMIB.GRD_COLOR = 128
_0_IMIB.GRD_DURATION = 256
_0_IMIB.GRD_XAXISPOINTS = 512
_0_IMIB.GRD_YAXISPOINTS = 1024
_0_IMIB.GRD_XGRIDLINES = 2048
_0_IMIB.GRD_YGRIDLINES = 4096

# typedef ... PlotType
class PlotType:
    _NP_RepositoryId = "IDL:IMIB/PlotType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.PlotType = PlotType
_0_IMIB._d_PlotType  = omniORB.tcInternal.tv_char
_0_IMIB._ad_PlotType = (omniORB.tcInternal.tv_alias, PlotType._NP_RepositoryId, "PlotType", omniORB.tcInternal.tv_char)
_0_IMIB._tc_PlotType = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_PlotType)
omniORB.registerType(PlotType._NP_RepositoryId, _0_IMIB._ad_PlotType, _0_IMIB._tc_PlotType)
del PlotType
_0_IMIB.FULL_SCREEN = "F"
_0_IMIB.HALF_SCREEN = "H"
_0_IMIB.QUARTER_SCREEN = "Q"
_0_IMIB.SLICED_SCREEN = "S"

# typedef ... Marker
class Marker:
    _NP_RepositoryId = "IDL:IMIB/Marker:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.Marker = Marker
_0_IMIB._d_Marker  = omniORB.tcInternal.tv_char
_0_IMIB._ad_Marker = (omniORB.tcInternal.tv_alias, Marker._NP_RepositoryId, "Marker", omniORB.tcInternal.tv_char)
_0_IMIB._tc_Marker = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_Marker)
omniORB.registerType(Marker._NP_RepositoryId, _0_IMIB._ad_Marker, _0_IMIB._tc_Marker)
del Marker
_0_IMIB.POINT = "P"
_0_IMIB.CROSS = "C"
_0_IMIB.PLUS = "p"
_0_IMIB.CIRCLE = "c"
_0_IMIB.STAR = "S"
_0_IMIB.DIAMOND = "D"
_0_IMIB.SQUARE = "s"

# typedef ... LineStyle
class LineStyle:
    _NP_RepositoryId = "IDL:IMIB/LineStyle:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.LineStyle = LineStyle
_0_IMIB._d_LineStyle  = omniORB.tcInternal.tv_char
_0_IMIB._ad_LineStyle = (omniORB.tcInternal.tv_alias, LineStyle._NP_RepositoryId, "LineStyle", omniORB.tcInternal.tv_char)
_0_IMIB._tc_LineStyle = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_LineStyle)
omniORB.registerType(LineStyle._NP_RepositoryId, _0_IMIB._ad_LineStyle, _0_IMIB._tc_LineStyle)
del LineStyle
_0_IMIB.NONE = "N"
_0_IMIB.SOLID = "S"
_0_IMIB.LONGDASH = "L"
_0_IMIB.SHORTDASH = "s"
_0_IMIB.DOT = "D"
_0_IMIB.DASHDOT = "d"

# struct GRDparamDef
_0_IMIB.GRDparamDef = omniORB.newEmptyClass()
class GRDparamDef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/GRDparamDef:1.0"

    def __init__(self, m_andInfo, m_plotArea, m_maxValue, m_minValue, m_color, m_marker, m_lineStyle):
        self.m_andInfo = m_andInfo
        self.m_plotArea = m_plotArea
        self.m_maxValue = m_maxValue
        self.m_minValue = m_minValue
        self.m_color = m_color
        self.m_marker = m_marker
        self.m_lineStyle = m_lineStyle

_0_IMIB.GRDparamDef = GRDparamDef
_0_IMIB._d_GRDparamDef  = (omniORB.tcInternal.tv_struct, GRDparamDef, GRDparamDef._NP_RepositoryId, "GRDparamDef", "m_andInfo", omniORB.typeMapping["IDL:IMIB/ANDparamDef:1.0"], "m_plotArea", omniORB.tcInternal.tv_short, "m_maxValue", omniORB.tcInternal.tv_double, "m_minValue", omniORB.tcInternal.tv_double, "m_color", omniORB.typeMapping["IDL:IBASE/Color:1.0"], "m_marker", omniORB.typeMapping["IDL:IMIB/Marker:1.0"], "m_lineStyle", omniORB.typeMapping["IDL:IMIB/LineStyle:1.0"])
_0_IMIB._tc_GRDparamDef = omniORB.tcInternal.createTypeCode(_0_IMIB._d_GRDparamDef)
omniORB.registerType(GRDparamDef._NP_RepositoryId, _0_IMIB._d_GRDparamDef, _0_IMIB._tc_GRDparamDef)
del GRDparamDef

# typedef ... GRDparamDefs
class GRDparamDefs:
    _NP_RepositoryId = "IDL:IMIB/GRDparamDefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.GRDparamDefs = GRDparamDefs
_0_IMIB._d_GRDparamDefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/GRDparamDef:1.0"], 0)
_0_IMIB._ad_GRDparamDefs = (omniORB.tcInternal.tv_alias, GRDparamDefs._NP_RepositoryId, "GRDparamDefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/GRDparamDef:1.0"], 0))
_0_IMIB._tc_GRDparamDefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_GRDparamDefs)
omniORB.registerType(GRDparamDefs._NP_RepositoryId, _0_IMIB._ad_GRDparamDefs, _0_IMIB._tc_GRDparamDefs)
del GRDparamDefs

# struct GRDdef
_0_IMIB.GRDdef = omniORB.newEmptyClass()
class GRDdef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/GRDdef:1.0"

    def __init__(self, m_name, m_description, m_plotType, m_updateRate, m_isScrolling, m_autoHardCopy, m_xParameterNo, m_color, m_duration, m_xAxisPoints, m_yAxisPoints, m_xGridLines, m_yGridLines, m_paramEntries):
        self.m_name = m_name
        self.m_description = m_description
        self.m_plotType = m_plotType
        self.m_updateRate = m_updateRate
        self.m_isScrolling = m_isScrolling
        self.m_autoHardCopy = m_autoHardCopy
        self.m_xParameterNo = m_xParameterNo
        self.m_color = m_color
        self.m_duration = m_duration
        self.m_xAxisPoints = m_xAxisPoints
        self.m_yAxisPoints = m_yAxisPoints
        self.m_xGridLines = m_xGridLines
        self.m_yGridLines = m_yGridLines
        self.m_paramEntries = m_paramEntries

_0_IMIB.GRDdef = GRDdef
_0_IMIB._d_GRDdef  = (omniORB.tcInternal.tv_struct, GRDdef, GRDdef._NP_RepositoryId, "GRDdef", "m_name", (omniORB.tcInternal.tv_string,0), "m_description", (omniORB.tcInternal.tv_string,0), "m_plotType", omniORB.typeMapping["IDL:IMIB/PlotType:1.0"], "m_updateRate", omniORB.tcInternal.tv_long, "m_isScrolling", omniORB.tcInternal.tv_boolean, "m_autoHardCopy", omniORB.tcInternal.tv_boolean, "m_xParameterNo", omniORB.tcInternal.tv_short, "m_color", omniORB.typeMapping["IDL:IBASE/Color:1.0"], "m_duration", omniORB.tcInternal.tv_double, "m_xAxisPoints", omniORB.tcInternal.tv_short, "m_yAxisPoints", omniORB.tcInternal.tv_short, "m_xGridLines", omniORB.tcInternal.tv_short, "m_yGridLines", omniORB.tcInternal.tv_short, "m_paramEntries", omniORB.typeMapping["IDL:IMIB/GRDparamDefs:1.0"])
_0_IMIB._tc_GRDdef = omniORB.tcInternal.createTypeCode(_0_IMIB._d_GRDdef)
omniORB.registerType(GRDdef._NP_RepositoryId, _0_IMIB._d_GRDdef, _0_IMIB._tc_GRDdef)
del GRDdef

# typedef ... GRDdefs
class GRDdefs:
    _NP_RepositoryId = "IDL:IMIB/GRDdefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.GRDdefs = GRDdefs
_0_IMIB._d_GRDdefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/GRDdef:1.0"], 0)
_0_IMIB._ad_GRDdefs = (omniORB.tcInternal.tv_alias, GRDdefs._NP_RepositoryId, "GRDdefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/GRDdef:1.0"], 0))
_0_IMIB._tc_GRDdefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_GRDdefs)
omniORB.registerType(GRDdefs._NP_RepositoryId, _0_IMIB._ad_GRDdefs, _0_IMIB._tc_GRDdefs)
del GRDdefs

# typedef ... SCRattributeType
class SCRattributeType:
    _NP_RepositoryId = "IDL:IMIB/SCRattributeType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.SCRattributeType = SCRattributeType
_0_IMIB._d_SCRattributeType  = omniORB.tcInternal.tv_short
_0_IMIB._ad_SCRattributeType = (omniORB.tcInternal.tv_alias, SCRattributeType._NP_RepositoryId, "SCRattributeType", omniORB.tcInternal.tv_short)
_0_IMIB._tc_SCRattributeType = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_SCRattributeType)
omniORB.registerType(SCRattributeType._NP_RepositoryId, _0_IMIB._ad_SCRattributeType, _0_IMIB._tc_SCRattributeType)
del SCRattributeType
_0_IMIB.SCR_NAME = 1
_0_IMIB.SCR_DESCRIPTION = 2
_0_IMIB.SCR_UPDATERATE = 4

# struct SCRparamDef
_0_IMIB.SCRparamDef = omniORB.newEmptyClass()
class SCRparamDef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/SCRparamDef:1.0"

    def __init__(self, m_andInfo, m_fgColor, m_bgColor, m_updateWhenScroll):
        self.m_andInfo = m_andInfo
        self.m_fgColor = m_fgColor
        self.m_bgColor = m_bgColor
        self.m_updateWhenScroll = m_updateWhenScroll

_0_IMIB.SCRparamDef = SCRparamDef
_0_IMIB._d_SCRparamDef  = (omniORB.tcInternal.tv_struct, SCRparamDef, SCRparamDef._NP_RepositoryId, "SCRparamDef", "m_andInfo", omniORB.typeMapping["IDL:IMIB/ANDparamDef:1.0"], "m_fgColor", omniORB.typeMapping["IDL:IBASE/Color:1.0"], "m_bgColor", omniORB.typeMapping["IDL:IBASE/Color:1.0"], "m_updateWhenScroll", omniORB.tcInternal.tv_boolean)
_0_IMIB._tc_SCRparamDef = omniORB.tcInternal.createTypeCode(_0_IMIB._d_SCRparamDef)
omniORB.registerType(SCRparamDef._NP_RepositoryId, _0_IMIB._d_SCRparamDef, _0_IMIB._tc_SCRparamDef)
del SCRparamDef

# typedef ... SCRparamDefs
class SCRparamDefs:
    _NP_RepositoryId = "IDL:IMIB/SCRparamDefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.SCRparamDefs = SCRparamDefs
_0_IMIB._d_SCRparamDefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/SCRparamDef:1.0"], 0)
_0_IMIB._ad_SCRparamDefs = (omniORB.tcInternal.tv_alias, SCRparamDefs._NP_RepositoryId, "SCRparamDefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/SCRparamDef:1.0"], 0))
_0_IMIB._tc_SCRparamDefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_SCRparamDefs)
omniORB.registerType(SCRparamDefs._NP_RepositoryId, _0_IMIB._ad_SCRparamDefs, _0_IMIB._tc_SCRparamDefs)
del SCRparamDefs

# struct SCRdef
_0_IMIB.SCRdef = omniORB.newEmptyClass()
class SCRdef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMIB/SCRdef:1.0"

    def __init__(self, m_name, m_description, m_updateRate, m_paramEntries):
        self.m_name = m_name
        self.m_description = m_description
        self.m_updateRate = m_updateRate
        self.m_paramEntries = m_paramEntries

_0_IMIB.SCRdef = SCRdef
_0_IMIB._d_SCRdef  = (omniORB.tcInternal.tv_struct, SCRdef, SCRdef._NP_RepositoryId, "SCRdef", "m_name", (omniORB.tcInternal.tv_string,0), "m_description", (omniORB.tcInternal.tv_string,0), "m_updateRate", omniORB.tcInternal.tv_long, "m_paramEntries", omniORB.typeMapping["IDL:IMIB/SCRparamDefs:1.0"])
_0_IMIB._tc_SCRdef = omniORB.tcInternal.createTypeCode(_0_IMIB._d_SCRdef)
omniORB.registerType(SCRdef._NP_RepositoryId, _0_IMIB._d_SCRdef, _0_IMIB._tc_SCRdef)
del SCRdef

# typedef ... SCRdefs
class SCRdefs:
    _NP_RepositoryId = "IDL:IMIB/SCRdefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMIB.SCRdefs = SCRdefs
_0_IMIB._d_SCRdefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/SCRdef:1.0"], 0)
_0_IMIB._ad_SCRdefs = (omniORB.tcInternal.tv_alias, SCRdefs._NP_RepositoryId, "SCRdefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMIB/SCRdef:1.0"], 0))
_0_IMIB._tc_SCRdefs = omniORB.tcInternal.createTypeCode(_0_IMIB._ad_SCRdefs)
omniORB.registerType(SCRdefs._NP_RepositoryId, _0_IMIB._ad_SCRdefs, _0_IMIB._tc_SCRdefs)
del SCRdefs

#
# End of module "IMIB"
#
__name__ = "spell.lib.hifly.interface.IMIB_idl"

_exported_modules = ( "spell.lib.hifly.interface.IMIB", )

# The end.
