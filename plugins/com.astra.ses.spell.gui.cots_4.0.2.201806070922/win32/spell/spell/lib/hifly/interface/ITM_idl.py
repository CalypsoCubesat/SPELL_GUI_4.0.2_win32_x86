# Python stubs generated by omniidl from ITM.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "IBASE.idl"
import spell.lib.hifly.interface.IBASE_idl
_0_IBASE = omniORB.openModule("spell.lib.hifly.interface.IBASE")
_0_IBASE__POA = omniORB.openModule("spell.lib.hifly.interface.IBASE__POA")

#
# Start of module "ITM"
#
__name__ = "spell.lib.hifly.interface.ITM"
_0_ITM = omniORB.openModule("spell.lib.hifly.interface.ITM", r"ITM.idl")
_0_ITM__POA = omniORB.openModule("spell.lib.hifly.interface.ITM__POA", r"ITM.idl")


# typedef ... Validity
class Validity:
    _NP_RepositoryId = "IDL:ITM/Validity:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ITM.Validity = Validity
_0_ITM._d_Validity  = omniORB.tcInternal.tv_ulonglong
_0_ITM._ad_Validity = (omniORB.tcInternal.tv_alias, Validity._NP_RepositoryId, "Validity", omniORB.tcInternal.tv_ulonglong)
_0_ITM._tc_Validity = omniORB.tcInternal.createTypeCode(_0_ITM._ad_Validity)
omniORB.registerType(Validity._NP_RepositoryId, _0_ITM._ad_Validity, _0_ITM._tc_Validity)
del Validity
_0_ITM.VAL_STATE_OFF = 1
_0_ITM.VAL_POWER_OFF = 2
_0_ITM.VAL_ROUTE_OFF = 4
_0_ITM.VAL_MISC = 8
_0_ITM.VAL_TRANSIENT = 16
_0_ITM.VAL_TRANSPORT_ERROR_1 = 32
_0_ITM.VAL_TRANSPORT_ERROR_2 = 64
_0_ITM.VAL_TRANSPORT_ERROR_3 = 128
_0_ITM.VAL_TRANSPORT_ERROR_4 = 256
_0_ITM.VAL_TRANSPORT_ERROR_5 = 512
_0_ITM.VAL_TRANSPORT_ERROR_6 = 1024
_0_ITM.VAL_TRANSPORT_ERROR_7 = 2048
_0_ITM.VAL_TRANSPORT_ERROR_8 = 4096
_0_ITM.VAL_EXPIRED = 8192
_0_ITM.VAL_UNKNOWN_STATE = 16384
_0_ITM.VAL_UNKNOWN_COMMAND = 32768
_0_ITM.VAL_UNKNOWN_CRITERIA = 65536
_0_ITM.VAL_CALIBRATION = 131072
_0_ITM.VAL_TOO_EARLY = 262144
_0_ITM.VAL_UNKNOWN_PKT = 524288
_0_ITM.VAL_UNINIT = 1048576
_0_ITM.VAL_PKT_RETRV = 2097152
_0_ITM.VAL_MIB_ERROR = 4194304
_0_ITM.VAL_SYSTEM_ERROR = 8388608
_0_ITM.VAL_FIELD_UNKNOWN = 16777216
_0_ITM.VAL_FIELD_ABSENT = 33554432
_0_ITM.VAL_UNKNOWN_TYPE = 67108864
_0_ITM.VAL_UNKNOWN_OP = 134217728
_0_ITM.VAL_UNKNOWN_CONV = 268435456
_0_ITM.VAL_OVERFLOW = 536870912
_0_ITM.VAL_DIVIDE_BY_ZERO = 1073741824
_0_ITM.VAL_OL_PARSE = 2147483648
_0_ITM.BAD_PACKET = 4294967296

# struct ReducedValue
_0_ITM.ReducedValue = omniORB.newEmptyClass()
class ReducedValue (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ITM/ReducedValue:1.0"

    def __init__(self, m_value, m_validity):
        self.m_value = m_value
        self.m_validity = m_validity

_0_ITM.ReducedValue = ReducedValue
_0_ITM._d_ReducedValue  = (omniORB.tcInternal.tv_struct, ReducedValue, ReducedValue._NP_RepositoryId, "ReducedValue", "m_value", omniORB.typeMapping["IDL:IBASE/Variant:1.0"], "m_validity", omniORB.typeMapping["IDL:ITM/Validity:1.0"])
_0_ITM._tc_ReducedValue = omniORB.tcInternal.createTypeCode(_0_ITM._d_ReducedValue)
omniORB.registerType(ReducedValue._NP_RepositoryId, _0_ITM._d_ReducedValue, _0_ITM._tc_ReducedValue)
del ReducedValue

# struct Value
_0_ITM.Value = omniORB.newEmptyClass()
class Value (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ITM/Value:1.0"

    def __init__(self, m_value, m_validity, m_sampleTime):
        self.m_value = m_value
        self.m_validity = m_validity
        self.m_sampleTime = m_sampleTime

_0_ITM.Value = Value
_0_ITM._d_Value  = (omniORB.tcInternal.tv_struct, Value, Value._NP_RepositoryId, "Value", "m_value", omniORB.typeMapping["IDL:IBASE/Variant:1.0"], "m_validity", omniORB.typeMapping["IDL:ITM/Validity:1.0"], "m_sampleTime", omniORB.typeMapping["IDL:IBASE/Time:1.0"])
_0_ITM._tc_Value = omniORB.tcInternal.createTypeCode(_0_ITM._d_Value)
omniORB.registerType(Value._NP_RepositoryId, _0_ITM._d_Value, _0_ITM._tc_Value)
del Value

# typedef ... OOLstate
class OOLstate:
    _NP_RepositoryId = "IDL:ITM/OOLstate:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ITM.OOLstate = OOLstate
_0_ITM._d_OOLstate  = omniORB.tcInternal.tv_char
_0_ITM._ad_OOLstate = (omniORB.tcInternal.tv_alias, OOLstate._NP_RepositoryId, "OOLstate", omniORB.tcInternal.tv_char)
_0_ITM._tc_OOLstate = omniORB.tcInternal.createTypeCode(_0_ITM._ad_OOLstate)
omniORB.registerType(OOLstate._NP_RepositoryId, _0_ITM._ad_OOLstate, _0_ITM._tc_OOLstate)
del OOLstate
_0_ITM.OOL_NOMINAL = "n"
_0_ITM.OOL_WARNING_UNKNOWN = "u"
_0_ITM.OOL_WARNING_LOW = "l"
_0_ITM.OOL_WARNING_HIGH = "h"
_0_ITM.OOL_ALARM_UNKNOWN = "U"
_0_ITM.OOL_ALARM_LOW = "L"
_0_ITM.OOL_ALARM_HIGH = "H"
_0_ITM.OOL_SCC = "S"

# typedef ... SCCstate
class SCCstate:
    _NP_RepositoryId = "IDL:ITM/SCCstate:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ITM.SCCstate = SCCstate
_0_ITM._d_SCCstate  = omniORB.tcInternal.tv_char
_0_ITM._ad_SCCstate = (omniORB.tcInternal.tv_alias, SCCstate._NP_RepositoryId, "SCCstate", omniORB.tcInternal.tv_char)
_0_ITM._tc_SCCstate = omniORB.tcInternal.createTypeCode(_0_ITM._ad_SCCstate)
omniORB.registerType(SCCstate._NP_RepositoryId, _0_ITM._ad_SCCstate, _0_ITM._tc_SCCstate)
del SCCstate
_0_ITM.SCC_UNINIT = "U"
_0_ITM.SCC_INIT = "I"
_0_ITM.SCC_DISABLE = "D"
_0_ITM.SCC_OFF = "O"

# struct AllValues
_0_ITM.AllValues = omniORB.newEmptyClass()
class AllValues (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ITM/AllValues:1.0"

    def __init__(self, m_sampleTime, m_oolState, m_sccState, m_rawValue, m_engValue, m_synValue, m_sourceValue, m_defaultValue):
        self.m_sampleTime = m_sampleTime
        self.m_oolState = m_oolState
        self.m_sccState = m_sccState
        self.m_rawValue = m_rawValue
        self.m_engValue = m_engValue
        self.m_synValue = m_synValue
        self.m_sourceValue = m_sourceValue
        self.m_defaultValue = m_defaultValue

_0_ITM.AllValues = AllValues
_0_ITM._d_AllValues  = (omniORB.tcInternal.tv_struct, AllValues, AllValues._NP_RepositoryId, "AllValues", "m_sampleTime", omniORB.typeMapping["IDL:IBASE/Time:1.0"], "m_oolState", omniORB.typeMapping["IDL:ITM/OOLstate:1.0"], "m_sccState", omniORB.typeMapping["IDL:ITM/SCCstate:1.0"], "m_rawValue", omniORB.typeMapping["IDL:ITM/ReducedValue:1.0"], "m_engValue", omniORB.typeMapping["IDL:ITM/ReducedValue:1.0"], "m_synValue", omniORB.typeMapping["IDL:ITM/ReducedValue:1.0"], "m_sourceValue", omniORB.typeMapping["IDL:ITM/ReducedValue:1.0"], "m_defaultValue", omniORB.typeMapping["IDL:ITM/ReducedValue:1.0"])
_0_ITM._tc_AllValues = omniORB.tcInternal.createTypeCode(_0_ITM._d_AllValues)
omniORB.registerType(AllValues._NP_RepositoryId, _0_ITM._d_AllValues, _0_ITM._tc_AllValues)
del AllValues

# struct InjectParam
_0_ITM.InjectParam = omniORB.newEmptyClass()
class InjectParam (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ITM/InjectParam:1.0"

    def __init__(self, m_name, m_isEngValue, m_value):
        self.m_name = m_name
        self.m_isEngValue = m_isEngValue
        self.m_value = m_value

_0_ITM.InjectParam = InjectParam
_0_ITM._d_InjectParam  = (omniORB.tcInternal.tv_struct, InjectParam, InjectParam._NP_RepositoryId, "InjectParam", "m_name", (omniORB.tcInternal.tv_string,0), "m_isEngValue", omniORB.tcInternal.tv_boolean, "m_value", omniORB.typeMapping["IDL:IBASE/Variant:1.0"])
_0_ITM._tc_InjectParam = omniORB.tcInternal.createTypeCode(_0_ITM._d_InjectParam)
omniORB.registerType(InjectParam._NP_RepositoryId, _0_ITM._d_InjectParam, _0_ITM._tc_InjectParam)
del InjectParam

# typedef ... InjectParams
class InjectParams:
    _NP_RepositoryId = "IDL:ITM/InjectParams:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ITM.InjectParams = InjectParams
_0_ITM._d_InjectParams  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ITM/InjectParam:1.0"], 0)
_0_ITM._ad_InjectParams = (omniORB.tcInternal.tv_alias, InjectParams._NP_RepositoryId, "InjectParams", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ITM/InjectParam:1.0"], 0))
_0_ITM._tc_InjectParams = omniORB.tcInternal.createTypeCode(_0_ITM._ad_InjectParams)
omniORB.registerType(InjectParams._NP_RepositoryId, _0_ITM._ad_InjectParams, _0_ITM._tc_InjectParams)
del InjectParams

# typedef ... RawVariantState
class RawVariantState:
    _NP_RepositoryId = "IDL:ITM/RawVariantState:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ITM.RawVariantState = RawVariantState
_0_ITM._d_RawVariantState  = omniORB.tcInternal.tv_char
_0_ITM._ad_RawVariantState = (omniORB.tcInternal.tv_alias, RawVariantState._NP_RepositoryId, "RawVariantState", omniORB.tcInternal.tv_char)
_0_ITM._tc_RawVariantState = omniORB.tcInternal.createTypeCode(_0_ITM._ad_RawVariantState)
omniORB.registerType(RawVariantState._NP_RepositoryId, _0_ITM._ad_RawVariantState, _0_ITM._tc_RawVariantState)
del RawVariantState

# union RawVariant
_0_ITM.RawVariant = omniORB.newEmptyClass()
class RawVariant (omniORB.Union):
    _NP_RepositoryId = "IDL:ITM/RawVariant:1.0"

_0_ITM.RawVariant = RawVariant

RawVariant._m_to_d = {"m_shortFormat": "i", "m_longFormat": "I", "m_ushortFormat": "u", "m_ulongFormat": "U", "m_floatFormat": "F", "m_doubleFormat": "D"}
RawVariant._d_to_m = {"i": "m_shortFormat", "I": "m_longFormat", "u": "m_ushortFormat", "U": "m_ulongFormat", "F": "m_floatFormat", "D": "m_doubleFormat"}
RawVariant._def_m  = None
RawVariant._def_d  = None

_0_ITM._m_RawVariant  = (("i", "m_shortFormat", omniORB.tcInternal.tv_short), ("I", "m_longFormat", omniORB.tcInternal.tv_long), ("u", "m_ushortFormat", omniORB.tcInternal.tv_ushort), ("U", "m_ulongFormat", omniORB.tcInternal.tv_ulong), ("F", "m_floatFormat", omniORB.tcInternal.tv_float), ("D", "m_doubleFormat", omniORB.tcInternal.tv_double),)
_0_ITM._d_RawVariant  = (omniORB.tcInternal.tv_union, RawVariant, RawVariant._NP_RepositoryId, "RawVariant", omniORB.typeMapping["IDL:ITM/RawVariantState:1.0"], -1, _0_ITM._m_RawVariant, None, {"i": _0_ITM._m_RawVariant[0], "I": _0_ITM._m_RawVariant[1], "u": _0_ITM._m_RawVariant[2], "U": _0_ITM._m_RawVariant[3], "F": _0_ITM._m_RawVariant[4], "D": _0_ITM._m_RawVariant[5]})
_0_ITM._tc_RawVariant = omniORB.tcInternal.createTypeCode(_0_ITM._d_RawVariant)
omniORB.registerType(RawVariant._NP_RepositoryId, _0_ITM._d_RawVariant, _0_ITM._tc_RawVariant)
del RawVariant

# typedef ... RawVariants
class RawVariants:
    _NP_RepositoryId = "IDL:ITM/RawVariants:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ITM.RawVariants = RawVariants
_0_ITM._d_RawVariants  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ITM/RawVariant:1.0"], 0)
_0_ITM._ad_RawVariants = (omniORB.tcInternal.tv_alias, RawVariants._NP_RepositoryId, "RawVariants", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ITM/RawVariant:1.0"], 0))
_0_ITM._tc_RawVariants = omniORB.tcInternal.createTypeCode(_0_ITM._ad_RawVariants)
omniORB.registerType(RawVariants._NP_RepositoryId, _0_ITM._ad_RawVariants, _0_ITM._tc_RawVariants)
del RawVariants

# struct InjectRawParam
_0_ITM.InjectRawParam = omniORB.newEmptyClass()
class InjectRawParam (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ITM/InjectRawParam:1.0"

    def __init__(self, m_name, m_values):
        self.m_name = m_name
        self.m_values = m_values

_0_ITM.InjectRawParam = InjectRawParam
_0_ITM._d_InjectRawParam  = (omniORB.tcInternal.tv_struct, InjectRawParam, InjectRawParam._NP_RepositoryId, "InjectRawParam", "m_name", (omniORB.tcInternal.tv_string,0), "m_values", omniORB.typeMapping["IDL:ITM/RawVariants:1.0"])
_0_ITM._tc_InjectRawParam = omniORB.tcInternal.createTypeCode(_0_ITM._d_InjectRawParam)
omniORB.registerType(InjectRawParam._NP_RepositoryId, _0_ITM._d_InjectRawParam, _0_ITM._tc_InjectRawParam)
del InjectRawParam

# typedef ... InjectRawParams
class InjectRawParams:
    _NP_RepositoryId = "IDL:ITM/InjectRawParams:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ITM.InjectRawParams = InjectRawParams
_0_ITM._d_InjectRawParams  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ITM/InjectRawParam:1.0"], 0)
_0_ITM._ad_InjectRawParams = (omniORB.tcInternal.tv_alias, InjectRawParams._NP_RepositoryId, "InjectRawParams", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:ITM/InjectRawParam:1.0"], 0))
_0_ITM._tc_InjectRawParams = omniORB.tcInternal.createTypeCode(_0_ITM._ad_InjectRawParams)
omniORB.registerType(InjectRawParams._NP_RepositoryId, _0_ITM._ad_InjectRawParams, _0_ITM._tc_InjectRawParams)
del InjectRawParams

# struct ParamStats
_0_ITM.ParamStats = omniORB.newEmptyClass()
class ParamStats (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ITM/ParamStats:1.0"

    def __init__(self, m_name, m_numberOfValues, m_minimumValue, m_maximumValue, m_averageValue, m_deltaValue):
        self.m_name = m_name
        self.m_numberOfValues = m_numberOfValues
        self.m_minimumValue = m_minimumValue
        self.m_maximumValue = m_maximumValue
        self.m_averageValue = m_averageValue
        self.m_deltaValue = m_deltaValue

_0_ITM.ParamStats = ParamStats
_0_ITM._d_ParamStats  = (omniORB.tcInternal.tv_struct, ParamStats, ParamStats._NP_RepositoryId, "ParamStats", "m_name", (omniORB.tcInternal.tv_string,0), "m_numberOfValues", omniORB.tcInternal.tv_long, "m_minimumValue", omniORB.typeMapping["IDL:ITM/Value:1.0"], "m_maximumValue", omniORB.typeMapping["IDL:ITM/Value:1.0"], "m_averageValue", omniORB.typeMapping["IDL:ITM/Value:1.0"], "m_deltaValue", omniORB.typeMapping["IDL:ITM/Value:1.0"])
_0_ITM._tc_ParamStats = omniORB.tcInternal.createTypeCode(_0_ITM._d_ParamStats)
omniORB.registerType(ParamStats._NP_RepositoryId, _0_ITM._d_ParamStats, _0_ITM._tc_ParamStats)
del ParamStats

# exception invalidDuration
_0_ITM.invalidDuration = omniORB.newEmptyClass()
class invalidDuration (CORBA.UserException):
    _NP_RepositoryId = "IDL:ITM/invalidDuration:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_ITM.invalidDuration = invalidDuration
_0_ITM._d_invalidDuration  = (omniORB.tcInternal.tv_except, invalidDuration, invalidDuration._NP_RepositoryId, "invalidDuration", "reason", (omniORB.tcInternal.tv_string,0))
_0_ITM._tc_invalidDuration = omniORB.tcInternal.createTypeCode(_0_ITM._d_invalidDuration)
omniORB.registerType(invalidDuration._NP_RepositoryId, _0_ITM._d_invalidDuration, _0_ITM._tc_invalidDuration)
del invalidDuration

# exception requestNotMatched
_0_ITM.requestNotMatched = omniORB.newEmptyClass()
class requestNotMatched (CORBA.UserException):
    _NP_RepositoryId = "IDL:ITM/requestNotMatched:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_ITM.requestNotMatched = requestNotMatched
_0_ITM._d_requestNotMatched  = (omniORB.tcInternal.tv_except, requestNotMatched, requestNotMatched._NP_RepositoryId, "requestNotMatched", "reason", (omniORB.tcInternal.tv_string,0))
_0_ITM._tc_requestNotMatched = omniORB.tcInternal.createTypeCode(_0_ITM._d_requestNotMatched)
omniORB.registerType(requestNotMatched._NP_RepositoryId, _0_ITM._d_requestNotMatched, _0_ITM._tc_requestNotMatched)
del requestNotMatched

#
# End of module "ITM"
#
__name__ = "spell.lib.hifly.interface.ITM_idl"

_exported_modules = ( "spell.lib.hifly.interface.ITM", )

# The end.
