# Python stubs generated by omniidl from IUSER_IF.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "IBASE.idl"
import spell.lib.hifly.interface.IBASE_idl
_0_IBASE = omniORB.openModule("spell.lib.hifly.interface.IBASE")
_0_IBASE__POA = omniORB.openModule("spell.lib.hifly.interface.IBASE__POA")

#
# Start of module "IUSER_IF"
#
__name__ = "spell.lib.hifly.interface.IUSER_IF"
_0_IUSER_IF = omniORB.openModule("spell.lib.hifly.interface.IUSER_IF", r"IUSER_IF.idl")
_0_IUSER_IF__POA = omniORB.openModule("spell.lib.hifly.interface.IUSER_IF__POA", r"IUSER_IF.idl")


# interface UserMngr
_0_IUSER_IF._d_UserMngr = (omniORB.tcInternal.tv_objref, "IDL:IUSER_IF/UserMngr:1.0", "UserMngr")
omniORB.typeMapping["IDL:IUSER_IF/UserMngr:1.0"] = _0_IUSER_IF._d_UserMngr
_0_IUSER_IF.UserMngr = omniORB.newEmptyClass()
class UserMngr :
    _NP_RepositoryId = _0_IUSER_IF._d_UserMngr[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    ServiceName = "USER"


_0_IUSER_IF.UserMngr = UserMngr
_0_IUSER_IF._tc_UserMngr = omniORB.tcInternal.createTypeCode(_0_IUSER_IF._d_UserMngr)
omniORB.registerType(UserMngr._NP_RepositoryId, _0_IUSER_IF._d_UserMngr, _0_IUSER_IF._tc_UserMngr)

# UserMngr operations and attributes
UserMngr._d_setUserData = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:IBASE/ByteString:1.0"]), (), {_0_IBASE.NotFound._NP_RepositoryId: _0_IBASE._d_NotFound})
UserMngr._d_getUserData = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:IBASE/ByteString:1.0"], ), {_0_IBASE.NotFound._NP_RepositoryId: _0_IBASE._d_NotFound})

# UserMngr object reference
class _objref_UserMngr (CORBA.Object):
    _NP_RepositoryId = UserMngr._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def setUserData(self, *args):
        return _omnipy.invoke(self, "setUserData", _0_IUSER_IF.UserMngr._d_setUserData, args)

    def getUserData(self, *args):
        return _omnipy.invoke(self, "getUserData", _0_IUSER_IF.UserMngr._d_getUserData, args)

    __methods__ = ["setUserData", "getUserData"] + CORBA.Object.__methods__

omniORB.registerObjref(UserMngr._NP_RepositoryId, _objref_UserMngr)
_0_IUSER_IF._objref_UserMngr = _objref_UserMngr
del UserMngr, _objref_UserMngr

# UserMngr skeleton
__name__ = "spell.lib.hifly.interface.IUSER_IF__POA"
class UserMngr (PortableServer.Servant):
    _NP_RepositoryId = _0_IUSER_IF.UserMngr._NP_RepositoryId


    _omni_op_d = {"setUserData": _0_IUSER_IF.UserMngr._d_setUserData, "getUserData": _0_IUSER_IF.UserMngr._d_getUserData}

UserMngr._omni_skeleton = UserMngr
_0_IUSER_IF__POA.UserMngr = UserMngr
omniORB.registerSkeleton(UserMngr._NP_RepositoryId, UserMngr)
del UserMngr
__name__ = "spell.lib.hifly.interface.IUSER_IF"

#
# End of module "IUSER_IF"
#
__name__ = "spell.lib.hifly.interface.IUSER_IF_idl"

_exported_modules = ( "spell.lib.hifly.interface.IUSER_IF", )

# The end.
