# Python stubs generated by omniidl from TKCOMcorbaGUIinstallation.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "_GlobalIDL"
#
__name__ = "spell.lib.hifly.interface._GlobalIDL"
_0__GlobalIDL = omniORB.openModule("spell.lib.hifly.interface._GlobalIDL", r"TKCOMcorbaGUIinstallation.idl")
_0__GlobalIDL__POA = omniORB.openModule("spell.lib.hifly.interface._GlobalIDL__POA", r"TKCOMcorbaGUIinstallation.idl")


# interface TKCOMcorbaGUIinstallation
_0__GlobalIDL._d_TKCOMcorbaGUIinstallation = (omniORB.tcInternal.tv_objref, "IDL:TKCOMcorbaGUIinstallation:1.0", "TKCOMcorbaGUIinstallation")
omniORB.typeMapping["IDL:TKCOMcorbaGUIinstallation:1.0"] = _0__GlobalIDL._d_TKCOMcorbaGUIinstallation
_0__GlobalIDL.TKCOMcorbaGUIinstallation = omniORB.newEmptyClass()
class TKCOMcorbaGUIinstallation :
    _NP_RepositoryId = _0__GlobalIDL._d_TKCOMcorbaGUIinstallation[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.TKCOMcorbaGUIinstallation = TKCOMcorbaGUIinstallation
_0__GlobalIDL._tc_TKCOMcorbaGUIinstallation = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_TKCOMcorbaGUIinstallation)
omniORB.registerType(TKCOMcorbaGUIinstallation._NP_RepositoryId, _0__GlobalIDL._d_TKCOMcorbaGUIinstallation, _0__GlobalIDL._tc_TKCOMcorbaGUIinstallation)

# TKCOMcorbaGUIinstallation operations and attributes
TKCOMcorbaGUIinstallation._d_operationalStateChange = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), None)
TKCOMcorbaGUIinstallation._d_shutdownStateChange = ((omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), None)
TKCOMcorbaGUIinstallation._d_alive = ((), (), None)

# TKCOMcorbaGUIinstallation object reference
class _objref_TKCOMcorbaGUIinstallation (CORBA.Object):
    _NP_RepositoryId = TKCOMcorbaGUIinstallation._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def operationalStateChange(self, *args):
        return _omnipy.invoke(self, "operationalStateChange", _0__GlobalIDL.TKCOMcorbaGUIinstallation._d_operationalStateChange, args)

    def shutdownStateChange(self, *args):
        return _omnipy.invoke(self, "shutdownStateChange", _0__GlobalIDL.TKCOMcorbaGUIinstallation._d_shutdownStateChange, args)

    def alive(self, *args):
        return _omnipy.invoke(self, "alive", _0__GlobalIDL.TKCOMcorbaGUIinstallation._d_alive, args)

    __methods__ = ["operationalStateChange", "shutdownStateChange", "alive"] + CORBA.Object.__methods__

omniORB.registerObjref(TKCOMcorbaGUIinstallation._NP_RepositoryId, _objref_TKCOMcorbaGUIinstallation)
_0__GlobalIDL._objref_TKCOMcorbaGUIinstallation = _objref_TKCOMcorbaGUIinstallation
del TKCOMcorbaGUIinstallation, _objref_TKCOMcorbaGUIinstallation

# TKCOMcorbaGUIinstallation skeleton
__name__ = "spell.lib.hifly.interface._GlobalIDL__POA"
class TKCOMcorbaGUIinstallation (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.TKCOMcorbaGUIinstallation._NP_RepositoryId


    _omni_op_d = {"operationalStateChange": _0__GlobalIDL.TKCOMcorbaGUIinstallation._d_operationalStateChange, "shutdownStateChange": _0__GlobalIDL.TKCOMcorbaGUIinstallation._d_shutdownStateChange, "alive": _0__GlobalIDL.TKCOMcorbaGUIinstallation._d_alive}

TKCOMcorbaGUIinstallation._omni_skeleton = TKCOMcorbaGUIinstallation
_0__GlobalIDL__POA.TKCOMcorbaGUIinstallation = TKCOMcorbaGUIinstallation
omniORB.registerSkeleton(TKCOMcorbaGUIinstallation._NP_RepositoryId, TKCOMcorbaGUIinstallation)
del TKCOMcorbaGUIinstallation
__name__ = "spell.lib.hifly.interface._GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "spell.lib.hifly.interface.TKCOMcorbaGUIinstallation_idl"

_exported_modules = ( "spell.lib.hifly.interface._GlobalIDL", )

# The end.
