# Python stubs generated by omniidl from IMEM.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "IBASE.idl"
import spell.lib.hifly.interface.IBASE_idl
_0_IBASE = omniORB.openModule("spell.lib.hifly.interface.IBASE")
_0_IBASE__POA = omniORB.openModule("spell.lib.hifly.interface.IBASE__POA")

#
# Start of module "IMEM"
#
__name__ = "spell.lib.hifly.interface.IMEM"
_0_IMEM = omniORB.openModule("spell.lib.hifly.interface.IMEM", r"IMEM.idl")
_0_IMEM__POA = omniORB.openModule("spell.lib.hifly.interface.IMEM__POA", r"IMEM.idl")


# typedef ... File
class File:
    _NP_RepositoryId = "IDL:IMEM/File:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.File = File
_0_IMEM._d_File  = (omniORB.tcInternal.tv_string,0)
_0_IMEM._ad_File = (omniORB.tcInternal.tv_alias, File._NP_RepositoryId, "File", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_File = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_File)
omniORB.registerType(File._NP_RepositoryId, _0_IMEM._ad_File, _0_IMEM._tc_File)
del File

# typedef ... MemoryDevice
class MemoryDevice:
    _NP_RepositoryId = "IDL:IMEM/MemoryDevice:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.MemoryDevice = MemoryDevice
_0_IMEM._d_MemoryDevice  = (omniORB.tcInternal.tv_string,0)
_0_IMEM._ad_MemoryDevice = (omniORB.tcInternal.tv_alias, MemoryDevice._NP_RepositoryId, "MemoryDevice", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_MemoryDevice = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_MemoryDevice)
omniORB.registerType(MemoryDevice._NP_RepositoryId, _0_IMEM._ad_MemoryDevice, _0_IMEM._tc_MemoryDevice)
del MemoryDevice

# typedef ... OpsMemoryDevice
class OpsMemoryDevice:
    _NP_RepositoryId = "IDL:IMEM/OpsMemoryDevice:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.OpsMemoryDevice = OpsMemoryDevice
_0_IMEM._d_OpsMemoryDevice  = (omniORB.tcInternal.tv_string,0)
_0_IMEM._ad_OpsMemoryDevice = (omniORB.tcInternal.tv_alias, OpsMemoryDevice._NP_RepositoryId, "OpsMemoryDevice", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_OpsMemoryDevice = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_OpsMemoryDevice)
omniORB.registerType(OpsMemoryDevice._NP_RepositoryId, _0_IMEM._ad_OpsMemoryDevice, _0_IMEM._tc_OpsMemoryDevice)
del OpsMemoryDevice

# typedef ... MemoryBlock
class MemoryBlock:
    _NP_RepositoryId = "IDL:IMEM/MemoryBlock:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.MemoryBlock = MemoryBlock
_0_IMEM._d_MemoryBlock  = omniORB.tcInternal.tv_short
_0_IMEM._ad_MemoryBlock = (omniORB.tcInternal.tv_alias, MemoryBlock._NP_RepositoryId, "MemoryBlock", omniORB.tcInternal.tv_short)
_0_IMEM._tc_MemoryBlock = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_MemoryBlock)
omniORB.registerType(MemoryBlock._NP_RepositoryId, _0_IMEM._ad_MemoryBlock, _0_IMEM._tc_MemoryBlock)
del MemoryBlock

# typedef ... ParameterName
class ParameterName:
    _NP_RepositoryId = "IDL:IMEM/ParameterName:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.ParameterName = ParameterName
_0_IMEM._d_ParameterName  = (omniORB.tcInternal.tv_string,0)
_0_IMEM._ad_ParameterName = (omniORB.tcInternal.tv_alias, ParameterName._NP_RepositoryId, "ParameterName", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_ParameterName = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_ParameterName)
omniORB.registerType(ParameterName._NP_RepositoryId, _0_IMEM._ad_ParameterName, _0_IMEM._tc_ParameterName)
del ParameterName

# typedef ... TelecommadName
class TelecommadName:
    _NP_RepositoryId = "IDL:IMEM/TelecommadName:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.TelecommadName = TelecommadName
_0_IMEM._d_TelecommadName  = (omniORB.tcInternal.tv_string,0)
_0_IMEM._ad_TelecommadName = (omniORB.tcInternal.tv_alias, TelecommadName._NP_RepositoryId, "TelecommadName", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_TelecommadName = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_TelecommadName)
omniORB.registerType(TelecommadName._NP_RepositoryId, _0_IMEM._ad_TelecommadName, _0_IMEM._tc_TelecommadName)
del TelecommadName

# typedef ... MemoryDevices
class MemoryDevices:
    _NP_RepositoryId = "IDL:IMEM/MemoryDevices:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.MemoryDevices = MemoryDevices
_0_IMEM._d_MemoryDevices  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/MemoryDevice:1.0"], 0)
_0_IMEM._ad_MemoryDevices = (omniORB.tcInternal.tv_alias, MemoryDevices._NP_RepositoryId, "MemoryDevices", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/MemoryDevice:1.0"], 0))
_0_IMEM._tc_MemoryDevices = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_MemoryDevices)
omniORB.registerType(MemoryDevices._NP_RepositoryId, _0_IMEM._ad_MemoryDevices, _0_IMEM._tc_MemoryDevices)
del MemoryDevices

# typedef ... OpsMemoryDevices
class OpsMemoryDevices:
    _NP_RepositoryId = "IDL:IMEM/OpsMemoryDevices:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.OpsMemoryDevices = OpsMemoryDevices
_0_IMEM._d_OpsMemoryDevices  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], 0)
_0_IMEM._ad_OpsMemoryDevices = (omniORB.tcInternal.tv_alias, OpsMemoryDevices._NP_RepositoryId, "OpsMemoryDevices", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], 0))
_0_IMEM._tc_OpsMemoryDevices = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_OpsMemoryDevices)
omniORB.registerType(OpsMemoryDevices._NP_RepositoryId, _0_IMEM._ad_OpsMemoryDevices, _0_IMEM._tc_OpsMemoryDevices)
del OpsMemoryDevices

# typedef ... MemoryBlocks
class MemoryBlocks:
    _NP_RepositoryId = "IDL:IMEM/MemoryBlocks:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.MemoryBlocks = MemoryBlocks
_0_IMEM._d_MemoryBlocks  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], 0)
_0_IMEM._ad_MemoryBlocks = (omniORB.tcInternal.tv_alias, MemoryBlocks._NP_RepositoryId, "MemoryBlocks", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], 0))
_0_IMEM._tc_MemoryBlocks = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_MemoryBlocks)
omniORB.registerType(MemoryBlocks._NP_RepositoryId, _0_IMEM._ad_MemoryBlocks, _0_IMEM._tc_MemoryBlocks)
del MemoryBlocks

# typedef ... ParameterNames
class ParameterNames:
    _NP_RepositoryId = "IDL:IMEM/ParameterNames:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.ParameterNames = ParameterNames
_0_IMEM._d_ParameterNames  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], 0)
_0_IMEM._ad_ParameterNames = (omniORB.tcInternal.tv_alias, ParameterNames._NP_RepositoryId, "ParameterNames", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], 0))
_0_IMEM._tc_ParameterNames = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_ParameterNames)
omniORB.registerType(ParameterNames._NP_RepositoryId, _0_IMEM._ad_ParameterNames, _0_IMEM._tc_ParameterNames)
del ParameterNames

# typedef ... RawData
class RawData:
    _NP_RepositoryId = "IDL:IMEM/RawData:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.RawData = RawData
_0_IMEM._d_RawData  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_ushort, 0)
_0_IMEM._ad_RawData = (omniORB.tcInternal.tv_alias, RawData._NP_RepositoryId, "RawData", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_ushort, 0))
_0_IMEM._tc_RawData = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_RawData)
omniORB.registerType(RawData._NP_RepositoryId, _0_IMEM._ad_RawData, _0_IMEM._tc_RawData)
del RawData

# typedef ... Strings
class Strings:
    _NP_RepositoryId = "IDL:IMEM/Strings:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.Strings = Strings
_0_IMEM._d_Strings  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_IMEM._ad_Strings = (omniORB.tcInternal.tv_alias, Strings._NP_RepositoryId, "Strings", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_IMEM._tc_Strings = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_Strings)
omniORB.registerType(Strings._NP_RepositoryId, _0_IMEM._ad_Strings, _0_IMEM._tc_Strings)
del Strings

# typedef ... Files
class Files:
    _NP_RepositoryId = "IDL:IMEM/Files:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.Files = Files
_0_IMEM._d_Files  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/File:1.0"], 0)
_0_IMEM._ad_Files = (omniORB.tcInternal.tv_alias, Files._NP_RepositoryId, "Files", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/File:1.0"], 0))
_0_IMEM._tc_Files = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_Files)
omniORB.registerType(Files._NP_RepositoryId, _0_IMEM._ad_Files, _0_IMEM._tc_Files)
del Files

# struct KeyValue
_0_IMEM.KeyValue = omniORB.newEmptyClass()
class KeyValue (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/KeyValue:1.0"

    def __init__(self, key, value):
        self.key = key
        self.value = value

_0_IMEM.KeyValue = KeyValue
_0_IMEM._d_KeyValue  = (omniORB.tcInternal.tv_struct, KeyValue, KeyValue._NP_RepositoryId, "KeyValue", "key", (omniORB.tcInternal.tv_string,0), "value", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_KeyValue = omniORB.tcInternal.createTypeCode(_0_IMEM._d_KeyValue)
omniORB.registerType(KeyValue._NP_RepositoryId, _0_IMEM._d_KeyValue, _0_IMEM._tc_KeyValue)
del KeyValue

# typedef ... KeyValueSequence
class KeyValueSequence:
    _NP_RepositoryId = "IDL:IMEM/KeyValueSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.KeyValueSequence = KeyValueSequence
_0_IMEM._d_KeyValueSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/KeyValue:1.0"], 0)
_0_IMEM._ad_KeyValueSequence = (omniORB.tcInternal.tv_alias, KeyValueSequence._NP_RepositoryId, "KeyValueSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/KeyValue:1.0"], 0))
_0_IMEM._tc_KeyValueSequence = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_KeyValueSequence)
omniORB.registerType(KeyValueSequence._NP_RepositoryId, _0_IMEM._ad_KeyValueSequence, _0_IMEM._tc_KeyValueSequence)
del KeyValueSequence

# struct DeviceDefinition
_0_IMEM.DeviceDefinition = omniORB.newEmptyClass()
class DeviceDefinition (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/DeviceDefinition:1.0"

    def __init__(self, m_id, m_type, m_size):
        self.m_id = m_id
        self.m_type = m_type
        self.m_size = m_size

_0_IMEM.DeviceDefinition = DeviceDefinition
_0_IMEM._d_DeviceDefinition  = (omniORB.tcInternal.tv_struct, DeviceDefinition, DeviceDefinition._NP_RepositoryId, "DeviceDefinition", "m_id", omniORB.typeMapping["IDL:IMEM/MemoryDevice:1.0"], "m_type", (omniORB.tcInternal.tv_string,0), "m_size", omniORB.tcInternal.tv_long)
_0_IMEM._tc_DeviceDefinition = omniORB.tcInternal.createTypeCode(_0_IMEM._d_DeviceDefinition)
omniORB.registerType(DeviceDefinition._NP_RepositoryId, _0_IMEM._d_DeviceDefinition, _0_IMEM._tc_DeviceDefinition)
del DeviceDefinition

# struct BlockDefinition
_0_IMEM.BlockDefinition = omniORB.newEmptyClass()
class BlockDefinition (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/BlockDefinition:1.0"

    def __init__(self, m_id, m_description, m_parameters):
        self.m_id = m_id
        self.m_description = m_description
        self.m_parameters = m_parameters

_0_IMEM.BlockDefinition = BlockDefinition
_0_IMEM._d_BlockDefinition  = (omniORB.tcInternal.tv_struct, BlockDefinition, BlockDefinition._NP_RepositoryId, "BlockDefinition", "m_id", omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], "m_description", (omniORB.tcInternal.tv_string,0), "m_parameters", omniORB.typeMapping["IDL:IMEM/ParameterNames:1.0"])
_0_IMEM._tc_BlockDefinition = omniORB.tcInternal.createTypeCode(_0_IMEM._d_BlockDefinition)
omniORB.registerType(BlockDefinition._NP_RepositoryId, _0_IMEM._d_BlockDefinition, _0_IMEM._tc_BlockDefinition)
del BlockDefinition

# enum ImageKind
_0_IMEM.LIVE = omniORB.EnumItem("LIVE", 0)
_0_IMEM.GROUND = omniORB.EnumItem("GROUND", 1)
_0_IMEM.WORKING = omniORB.EnumItem("WORKING", 2)
_0_IMEM.STORED = omniORB.EnumItem("STORED", 3)
_0_IMEM.ImageKind = omniORB.Enum("IDL:IMEM/ImageKind:1.0", (_0_IMEM.LIVE, _0_IMEM.GROUND, _0_IMEM.WORKING, _0_IMEM.STORED,))

_0_IMEM._d_ImageKind  = (omniORB.tcInternal.tv_enum, _0_IMEM.ImageKind._NP_RepositoryId, "ImageKind", _0_IMEM.ImageKind._items)
_0_IMEM._tc_ImageKind = omniORB.tcInternal.createTypeCode(_0_IMEM._d_ImageKind)
omniORB.registerType(_0_IMEM.ImageKind._NP_RepositoryId, _0_IMEM._d_ImageKind, _0_IMEM._tc_ImageKind)

# struct MemoryImage
_0_IMEM.MemoryImage = omniORB.newEmptyClass()
class MemoryImage (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/MemoryImage:1.0"

    def __init__(self, m_device, m_kind, m_name, m_time):
        self.m_device = m_device
        self.m_kind = m_kind
        self.m_name = m_name
        self.m_time = m_time

_0_IMEM.MemoryImage = MemoryImage
_0_IMEM._d_MemoryImage  = (omniORB.tcInternal.tv_struct, MemoryImage, MemoryImage._NP_RepositoryId, "MemoryImage", "m_device", omniORB.typeMapping["IDL:IMEM/MemoryDevice:1.0"], "m_kind", omniORB.typeMapping["IDL:IMEM/ImageKind:1.0"], "m_name", (omniORB.tcInternal.tv_string,0), "m_time", omniORB.typeMapping["IDL:IBASE/Time:1.0"])
_0_IMEM._tc_MemoryImage = omniORB.tcInternal.createTypeCode(_0_IMEM._d_MemoryImage)
omniORB.registerType(MemoryImage._NP_RepositoryId, _0_IMEM._d_MemoryImage, _0_IMEM._tc_MemoryImage)
del MemoryImage

# typedef ... MemoryImages
class MemoryImages:
    _NP_RepositoryId = "IDL:IMEM/MemoryImages:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.MemoryImages = MemoryImages
_0_IMEM._d_MemoryImages  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], 0)
_0_IMEM._ad_MemoryImages = (omniORB.tcInternal.tv_alias, MemoryImages._NP_RepositoryId, "MemoryImages", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], 0))
_0_IMEM._tc_MemoryImages = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_MemoryImages)
omniORB.registerType(MemoryImages._NP_RepositoryId, _0_IMEM._ad_MemoryImages, _0_IMEM._tc_MemoryImages)
del MemoryImages

# enum View
_0_IMEM.RAW = omniORB.EnumItem("RAW", 0)
_0_IMEM.ENG = omniORB.EnumItem("ENG", 1)
_0_IMEM.View = omniORB.Enum("IDL:IMEM/View:1.0", (_0_IMEM.RAW, _0_IMEM.ENG,))

_0_IMEM._d_View  = (omniORB.tcInternal.tv_enum, _0_IMEM.View._NP_RepositoryId, "View", _0_IMEM.View._items)
_0_IMEM._tc_View = omniORB.tcInternal.createTypeCode(_0_IMEM._d_View)
omniORB.registerType(_0_IMEM.View._NP_RepositoryId, _0_IMEM._d_View, _0_IMEM._tc_View)

# struct Format
_0_IMEM.Format = omniORB.newEmptyClass()
class Format (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/Format:1.0"

    def __init__(self, m_radix, m_view, m_defaultView):
        self.m_radix = m_radix
        self.m_view = m_view
        self.m_defaultView = m_defaultView

_0_IMEM.Format = Format
_0_IMEM._d_Format  = (omniORB.tcInternal.tv_struct, Format, Format._NP_RepositoryId, "Format", "m_radix", omniORB.typeMapping["IDL:IBASE/Radix:1.0"], "m_view", omniORB.typeMapping["IDL:IMEM/View:1.0"], "m_defaultView", omniORB.tcInternal.tv_boolean)
_0_IMEM._tc_Format = omniORB.tcInternal.createTypeCode(_0_IMEM._d_Format)
omniORB.registerType(Format._NP_RepositoryId, _0_IMEM._d_Format, _0_IMEM._tc_Format)
del Format

# struct ParameterValue
_0_IMEM.ParameterValue = omniORB.newEmptyClass()
class ParameterValue (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/ParameterValue:1.0"

    def __init__(self, m_parameter, m_value, m_format):
        self.m_parameter = m_parameter
        self.m_value = m_value
        self.m_format = m_format

_0_IMEM.ParameterValue = ParameterValue
_0_IMEM._d_ParameterValue  = (omniORB.tcInternal.tv_struct, ParameterValue, ParameterValue._NP_RepositoryId, "ParameterValue", "m_parameter", omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], "m_value", omniORB.typeMapping["IDL:IBASE/Variant:1.0"], "m_format", omniORB.typeMapping["IDL:IMEM/Format:1.0"])
_0_IMEM._tc_ParameterValue = omniORB.tcInternal.createTypeCode(_0_IMEM._d_ParameterValue)
omniORB.registerType(ParameterValue._NP_RepositoryId, _0_IMEM._d_ParameterValue, _0_IMEM._tc_ParameterValue)
del ParameterValue

# typedef ... ParameterValues
class ParameterValues:
    _NP_RepositoryId = "IDL:IMEM/ParameterValues:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.ParameterValues = ParameterValues
_0_IMEM._d_ParameterValues  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/ParameterValue:1.0"], 0)
_0_IMEM._ad_ParameterValues = (omniORB.tcInternal.tv_alias, ParameterValues._NP_RepositoryId, "ParameterValues", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/ParameterValue:1.0"], 0))
_0_IMEM._tc_ParameterValues = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_ParameterValues)
omniORB.registerType(ParameterValues._NP_RepositoryId, _0_IMEM._ad_ParameterValues, _0_IMEM._tc_ParameterValues)
del ParameterValues

# enum ChannelMode
_0_IMEM.ABSOLUTE = omniORB.EnumItem("ABSOLUTE", 0)
_0_IMEM.RELATIVE = omniORB.EnumItem("RELATIVE", 1)
_0_IMEM.TM = omniORB.EnumItem("TM", 2)
_0_IMEM.CUSTOM_MODE = omniORB.EnumItem("CUSTOM_MODE", 3)
_0_IMEM.ChannelMode = omniORB.Enum("IDL:IMEM/ChannelMode:1.0", (_0_IMEM.ABSOLUTE, _0_IMEM.RELATIVE, _0_IMEM.TM, _0_IMEM.CUSTOM_MODE,))

_0_IMEM._d_ChannelMode  = (omniORB.tcInternal.tv_enum, _0_IMEM.ChannelMode._NP_RepositoryId, "ChannelMode", _0_IMEM.ChannelMode._items)
_0_IMEM._tc_ChannelMode = omniORB.tcInternal.createTypeCode(_0_IMEM._d_ChannelMode)
omniORB.registerType(_0_IMEM.ChannelMode._NP_RepositoryId, _0_IMEM._d_ChannelMode, _0_IMEM._tc_ChannelMode)

# struct AbsoluteChannelDetails
_0_IMEM.AbsoluteChannelDetails = omniORB.newEmptyClass()
class AbsoluteChannelDetails (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/AbsoluteChannelDetails:1.0"

    def __init__(self, m_startAddress, m_endAddress):
        self.m_startAddress = m_startAddress
        self.m_endAddress = m_endAddress

_0_IMEM.AbsoluteChannelDetails = AbsoluteChannelDetails
_0_IMEM._d_AbsoluteChannelDetails  = (omniORB.tcInternal.tv_struct, AbsoluteChannelDetails, AbsoluteChannelDetails._NP_RepositoryId, "AbsoluteChannelDetails", "m_startAddress", omniORB.tcInternal.tv_long, "m_endAddress", omniORB.tcInternal.tv_long)
_0_IMEM._tc_AbsoluteChannelDetails = omniORB.tcInternal.createTypeCode(_0_IMEM._d_AbsoluteChannelDetails)
omniORB.registerType(AbsoluteChannelDetails._NP_RepositoryId, _0_IMEM._d_AbsoluteChannelDetails, _0_IMEM._tc_AbsoluteChannelDetails)
del AbsoluteChannelDetails

# struct RelativeChannelDetails
_0_IMEM.RelativeChannelDetails = omniORB.newEmptyClass()
class RelativeChannelDetails (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/RelativeChannelDetails:1.0"

    def __init__(self, m_block, m_startAddress, m_endAddress):
        self.m_block = m_block
        self.m_startAddress = m_startAddress
        self.m_endAddress = m_endAddress

_0_IMEM.RelativeChannelDetails = RelativeChannelDetails
_0_IMEM._d_RelativeChannelDetails  = (omniORB.tcInternal.tv_struct, RelativeChannelDetails, RelativeChannelDetails._NP_RepositoryId, "RelativeChannelDetails", "m_block", omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], "m_startAddress", omniORB.tcInternal.tv_long, "m_endAddress", omniORB.tcInternal.tv_long)
_0_IMEM._tc_RelativeChannelDetails = omniORB.tcInternal.createTypeCode(_0_IMEM._d_RelativeChannelDetails)
omniORB.registerType(RelativeChannelDetails._NP_RepositoryId, _0_IMEM._d_RelativeChannelDetails, _0_IMEM._tc_RelativeChannelDetails)
del RelativeChannelDetails

# struct TMChannelDetails
_0_IMEM.TMChannelDetails = omniORB.newEmptyClass()
class TMChannelDetails (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/TMChannelDetails:1.0"

    def __init__(self, m_parameter, m_attached):
        self.m_parameter = m_parameter
        self.m_attached = m_attached

_0_IMEM.TMChannelDetails = TMChannelDetails
_0_IMEM._d_TMChannelDetails  = (omniORB.tcInternal.tv_struct, TMChannelDetails, TMChannelDetails._NP_RepositoryId, "TMChannelDetails", "m_parameter", omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], "m_attached", omniORB.tcInternal.tv_boolean)
_0_IMEM._tc_TMChannelDetails = omniORB.tcInternal.createTypeCode(_0_IMEM._d_TMChannelDetails)
omniORB.registerType(TMChannelDetails._NP_RepositoryId, _0_IMEM._d_TMChannelDetails, _0_IMEM._tc_TMChannelDetails)
del TMChannelDetails

# struct CustomChannelDetails
_0_IMEM.CustomChannelDetails = omniORB.newEmptyClass()
class CustomChannelDetails (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/CustomChannelDetails:1.0"

    def __init__(self, m_customMode, m_attached, m_details):
        self.m_customMode = m_customMode
        self.m_attached = m_attached
        self.m_details = m_details

_0_IMEM.CustomChannelDetails = CustomChannelDetails
_0_IMEM._d_CustomChannelDetails  = (omniORB.tcInternal.tv_struct, CustomChannelDetails, CustomChannelDetails._NP_RepositoryId, "CustomChannelDetails", "m_customMode", (omniORB.tcInternal.tv_string,0), "m_attached", omniORB.tcInternal.tv_boolean, "m_details", omniORB.typeMapping["IDL:IMEM/KeyValueSequence:1.0"])
_0_IMEM._tc_CustomChannelDetails = omniORB.tcInternal.createTypeCode(_0_IMEM._d_CustomChannelDetails)
omniORB.registerType(CustomChannelDetails._NP_RepositoryId, _0_IMEM._d_CustomChannelDetails, _0_IMEM._tc_CustomChannelDetails)
del CustomChannelDetails

# union ChannelDetails
_0_IMEM.ChannelDetails = omniORB.newEmptyClass()
class ChannelDetails (omniORB.Union):
    _NP_RepositoryId = "IDL:IMEM/ChannelDetails:1.0"

_0_IMEM.ChannelDetails = ChannelDetails

ChannelDetails._m_to_d = {"m_absoluteDetails": _0_IMEM.ABSOLUTE, "m_relativeDetails": _0_IMEM.RELATIVE, "m_tmDetails": _0_IMEM.TM, "m_customDetails": _0_IMEM.CUSTOM_MODE}
ChannelDetails._d_to_m = {_0_IMEM.ABSOLUTE: "m_absoluteDetails", _0_IMEM.RELATIVE: "m_relativeDetails", _0_IMEM.TM: "m_tmDetails", _0_IMEM.CUSTOM_MODE: "m_customDetails"}
ChannelDetails._def_m  = None
ChannelDetails._def_d  = None

_0_IMEM._m_ChannelDetails  = ((_0_IMEM.ABSOLUTE, "m_absoluteDetails", omniORB.typeMapping["IDL:IMEM/AbsoluteChannelDetails:1.0"]), (_0_IMEM.RELATIVE, "m_relativeDetails", omniORB.typeMapping["IDL:IMEM/RelativeChannelDetails:1.0"]), (_0_IMEM.TM, "m_tmDetails", omniORB.typeMapping["IDL:IMEM/TMChannelDetails:1.0"]), (_0_IMEM.CUSTOM_MODE, "m_customDetails", omniORB.typeMapping["IDL:IMEM/CustomChannelDetails:1.0"]),)
_0_IMEM._d_ChannelDetails  = (omniORB.tcInternal.tv_union, ChannelDetails, ChannelDetails._NP_RepositoryId, "ChannelDetails", omniORB.typeMapping["IDL:IMEM/ChannelMode:1.0"], -1, _0_IMEM._m_ChannelDetails, None, {_0_IMEM.ABSOLUTE: _0_IMEM._m_ChannelDetails[0], _0_IMEM.RELATIVE: _0_IMEM._m_ChannelDetails[1], _0_IMEM.TM: _0_IMEM._m_ChannelDetails[2], _0_IMEM.CUSTOM_MODE: _0_IMEM._m_ChannelDetails[3]})
_0_IMEM._tc_ChannelDetails = omniORB.tcInternal.createTypeCode(_0_IMEM._d_ChannelDetails)
omniORB.registerType(ChannelDetails._NP_RepositoryId, _0_IMEM._d_ChannelDetails, _0_IMEM._tc_ChannelDetails)
del ChannelDetails

# struct Channel
_0_IMEM.Channel = omniORB.newEmptyClass()
class Channel (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/Channel:1.0"

    def __init__(self, m_channel, m_source, m_details):
        self.m_channel = m_channel
        self.m_source = m_source
        self.m_details = m_details

_0_IMEM.Channel = Channel
_0_IMEM._d_Channel  = (omniORB.tcInternal.tv_struct, Channel, Channel._NP_RepositoryId, "Channel", "m_channel", omniORB.tcInternal.tv_short, "m_source", (omniORB.tcInternal.tv_string,0), "m_details", omniORB.typeMapping["IDL:IMEM/ChannelDetails:1.0"])
_0_IMEM._tc_Channel = omniORB.tcInternal.createTypeCode(_0_IMEM._d_Channel)
omniORB.registerType(Channel._NP_RepositoryId, _0_IMEM._d_Channel, _0_IMEM._tc_Channel)
del Channel

# typedef ... Channels
class Channels:
    _NP_RepositoryId = "IDL:IMEM/Channels:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IMEM.Channels = Channels
_0_IMEM._d_Channels  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/Channel:1.0"], 0)
_0_IMEM._ad_Channels = (omniORB.tcInternal.tv_alias, Channels._NP_RepositoryId, "Channels", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IMEM/Channel:1.0"], 0))
_0_IMEM._tc_Channels = omniORB.tcInternal.createTypeCode(_0_IMEM._ad_Channels)
omniORB.registerType(Channels._NP_RepositoryId, _0_IMEM._ad_Channels, _0_IMEM._tc_Channels)
del Channels

# struct ChannelsConfiguration
_0_IMEM.ChannelsConfiguration = omniORB.newEmptyClass()
class ChannelsConfiguration (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IMEM/ChannelsConfiguration:1.0"

    def __init__(self, m_channels, m_details):
        self.m_channels = m_channels
        self.m_details = m_details

_0_IMEM.ChannelsConfiguration = ChannelsConfiguration
_0_IMEM._d_ChannelsConfiguration  = (omniORB.tcInternal.tv_struct, ChannelsConfiguration, ChannelsConfiguration._NP_RepositoryId, "ChannelsConfiguration", "m_channels", omniORB.typeMapping["IDL:IMEM/Channels:1.0"], "m_details", omniORB.typeMapping["IDL:IMEM/KeyValueSequence:1.0"])
_0_IMEM._tc_ChannelsConfiguration = omniORB.tcInternal.createTypeCode(_0_IMEM._d_ChannelsConfiguration)
omniORB.registerType(ChannelsConfiguration._NP_RepositoryId, _0_IMEM._d_ChannelsConfiguration, _0_IMEM._tc_ChannelsConfiguration)
del ChannelsConfiguration

# exception InvalidAddress
_0_IMEM.InvalidAddress = omniORB.newEmptyClass()
class InvalidAddress (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidAddress:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidAddress = InvalidAddress
_0_IMEM._d_InvalidAddress  = (omniORB.tcInternal.tv_except, InvalidAddress, InvalidAddress._NP_RepositoryId, "InvalidAddress", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidAddress = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidAddress)
omniORB.registerType(InvalidAddress._NP_RepositoryId, _0_IMEM._d_InvalidAddress, _0_IMEM._tc_InvalidAddress)
del InvalidAddress

# exception InvalidFormat
_0_IMEM.InvalidFormat = omniORB.newEmptyClass()
class InvalidFormat (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidFormat:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidFormat = InvalidFormat
_0_IMEM._d_InvalidFormat  = (omniORB.tcInternal.tv_except, InvalidFormat, InvalidFormat._NP_RepositoryId, "InvalidFormat", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidFormat = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidFormat)
omniORB.registerType(InvalidFormat._NP_RepositoryId, _0_IMEM._d_InvalidFormat, _0_IMEM._tc_InvalidFormat)
del InvalidFormat

# exception InvalidBlock
_0_IMEM.InvalidBlock = omniORB.newEmptyClass()
class InvalidBlock (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidBlock:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidBlock = InvalidBlock
_0_IMEM._d_InvalidBlock  = (omniORB.tcInternal.tv_except, InvalidBlock, InvalidBlock._NP_RepositoryId, "InvalidBlock", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidBlock = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidBlock)
omniORB.registerType(InvalidBlock._NP_RepositoryId, _0_IMEM._d_InvalidBlock, _0_IMEM._tc_InvalidBlock)
del InvalidBlock

# exception InvalidDevice
_0_IMEM.InvalidDevice = omniORB.newEmptyClass()
class InvalidDevice (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidDevice:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidDevice = InvalidDevice
_0_IMEM._d_InvalidDevice  = (omniORB.tcInternal.tv_except, InvalidDevice, InvalidDevice._NP_RepositoryId, "InvalidDevice", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidDevice = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidDevice)
omniORB.registerType(InvalidDevice._NP_RepositoryId, _0_IMEM._d_InvalidDevice, _0_IMEM._tc_InvalidDevice)
del InvalidDevice

# exception InvalidImage
_0_IMEM.InvalidImage = omniORB.newEmptyClass()
class InvalidImage (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidImage:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidImage = InvalidImage
_0_IMEM._d_InvalidImage  = (omniORB.tcInternal.tv_except, InvalidImage, InvalidImage._NP_RepositoryId, "InvalidImage", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidImage = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidImage)
omniORB.registerType(InvalidImage._NP_RepositoryId, _0_IMEM._d_InvalidImage, _0_IMEM._tc_InvalidImage)
del InvalidImage

# exception ImageSaveFailure
_0_IMEM.ImageSaveFailure = omniORB.newEmptyClass()
class ImageSaveFailure (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/ImageSaveFailure:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.ImageSaveFailure = ImageSaveFailure
_0_IMEM._d_ImageSaveFailure  = (omniORB.tcInternal.tv_except, ImageSaveFailure, ImageSaveFailure._NP_RepositoryId, "ImageSaveFailure", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_ImageSaveFailure = omniORB.tcInternal.createTypeCode(_0_IMEM._d_ImageSaveFailure)
omniORB.registerType(ImageSaveFailure._NP_RepositoryId, _0_IMEM._d_ImageSaveFailure, _0_IMEM._tc_ImageSaveFailure)
del ImageSaveFailure

# exception ImageDeleteFailure
_0_IMEM.ImageDeleteFailure = omniORB.newEmptyClass()
class ImageDeleteFailure (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/ImageDeleteFailure:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.ImageDeleteFailure = ImageDeleteFailure
_0_IMEM._d_ImageDeleteFailure  = (omniORB.tcInternal.tv_except, ImageDeleteFailure, ImageDeleteFailure._NP_RepositoryId, "ImageDeleteFailure", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_ImageDeleteFailure = omniORB.tcInternal.createTypeCode(_0_IMEM._d_ImageDeleteFailure)
omniORB.registerType(ImageDeleteFailure._NP_RepositoryId, _0_IMEM._d_ImageDeleteFailure, _0_IMEM._tc_ImageDeleteFailure)
del ImageDeleteFailure

# exception InvalidFile
_0_IMEM.InvalidFile = omniORB.newEmptyClass()
class InvalidFile (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidFile:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidFile = InvalidFile
_0_IMEM._d_InvalidFile  = (omniORB.tcInternal.tv_except, InvalidFile, InvalidFile._NP_RepositoryId, "InvalidFile", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidFile = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidFile)
omniORB.registerType(InvalidFile._NP_RepositoryId, _0_IMEM._d_InvalidFile, _0_IMEM._tc_InvalidFile)
del InvalidFile

# exception InvalidValue
_0_IMEM.InvalidValue = omniORB.newEmptyClass()
class InvalidValue (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidValue:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidValue = InvalidValue
_0_IMEM._d_InvalidValue  = (omniORB.tcInternal.tv_except, InvalidValue, InvalidValue._NP_RepositoryId, "InvalidValue", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidValue = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidValue)
omniORB.registerType(InvalidValue._NP_RepositoryId, _0_IMEM._d_InvalidValue, _0_IMEM._tc_InvalidValue)
del InvalidValue

# exception InvalidParameter
_0_IMEM.InvalidParameter = omniORB.newEmptyClass()
class InvalidParameter (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidParameter:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidParameter = InvalidParameter
_0_IMEM._d_InvalidParameter  = (omniORB.tcInternal.tv_except, InvalidParameter, InvalidParameter._NP_RepositoryId, "InvalidParameter", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidParameter = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidParameter)
omniORB.registerType(InvalidParameter._NP_RepositoryId, _0_IMEM._d_InvalidParameter, _0_IMEM._tc_InvalidParameter)
del InvalidParameter

# exception InvalidTelecommand
_0_IMEM.InvalidTelecommand = omniORB.newEmptyClass()
class InvalidTelecommand (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidTelecommand:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidTelecommand = InvalidTelecommand
_0_IMEM._d_InvalidTelecommand  = (omniORB.tcInternal.tv_except, InvalidTelecommand, InvalidTelecommand._NP_RepositoryId, "InvalidTelecommand", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidTelecommand = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidTelecommand)
omniORB.registerType(InvalidTelecommand._NP_RepositoryId, _0_IMEM._d_InvalidTelecommand, _0_IMEM._tc_InvalidTelecommand)
del InvalidTelecommand

# exception InvalidChannel
_0_IMEM.InvalidChannel = omniORB.newEmptyClass()
class InvalidChannel (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidChannel:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidChannel = InvalidChannel
_0_IMEM._d_InvalidChannel  = (omniORB.tcInternal.tv_except, InvalidChannel, InvalidChannel._NP_RepositoryId, "InvalidChannel", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidChannel = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidChannel)
omniORB.registerType(InvalidChannel._NP_RepositoryId, _0_IMEM._d_InvalidChannel, _0_IMEM._tc_InvalidChannel)
del InvalidChannel

# exception InvalidChannelMode
_0_IMEM.InvalidChannelMode = omniORB.newEmptyClass()
class InvalidChannelMode (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/InvalidChannelMode:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.InvalidChannelMode = InvalidChannelMode
_0_IMEM._d_InvalidChannelMode  = (omniORB.tcInternal.tv_except, InvalidChannelMode, InvalidChannelMode._NP_RepositoryId, "InvalidChannelMode", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_InvalidChannelMode = omniORB.tcInternal.createTypeCode(_0_IMEM._d_InvalidChannelMode)
omniORB.registerType(InvalidChannelMode._NP_RepositoryId, _0_IMEM._d_InvalidChannelMode, _0_IMEM._tc_InvalidChannelMode)
del InvalidChannelMode

# exception SaveStackFileFailure
_0_IMEM.SaveStackFileFailure = omniORB.newEmptyClass()
class SaveStackFileFailure (CORBA.UserException):
    _NP_RepositoryId = "IDL:IMEM/SaveStackFileFailure:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason

_0_IMEM.SaveStackFileFailure = SaveStackFileFailure
_0_IMEM._d_SaveStackFileFailure  = (omniORB.tcInternal.tv_except, SaveStackFileFailure, SaveStackFileFailure._NP_RepositoryId, "SaveStackFileFailure", "reason", (omniORB.tcInternal.tv_string,0))
_0_IMEM._tc_SaveStackFileFailure = omniORB.tcInternal.createTypeCode(_0_IMEM._d_SaveStackFileFailure)
omniORB.registerType(SaveStackFileFailure._NP_RepositoryId, _0_IMEM._d_SaveStackFileFailure, _0_IMEM._tc_SaveStackFileFailure)
del SaveStackFileFailure

# interface MemoryServer
_0_IMEM._d_MemoryServer = (omniORB.tcInternal.tv_objref, "IDL:IMEM/MemoryServer:1.0", "MemoryServer")
omniORB.typeMapping["IDL:IMEM/MemoryServer:1.0"] = _0_IMEM._d_MemoryServer
_0_IMEM.MemoryServer = omniORB.newEmptyClass()
class MemoryServer :
    _NP_RepositoryId = _0_IMEM._d_MemoryServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    ServiceName = "MEMORY"


_0_IMEM.MemoryServer = MemoryServer
_0_IMEM._tc_MemoryServer = omniORB.tcInternal.createTypeCode(_0_IMEM._d_MemoryServer)
omniORB.registerType(MemoryServer._NP_RepositoryId, _0_IMEM._d_MemoryServer, _0_IMEM._tc_MemoryServer)

# MemoryServer operations and attributes
MemoryServer._d_getMemoryDevices = ((), (omniORB.typeMapping["IDL:IMEM/MemoryDevices:1.0"], ), None)
MemoryServer._d_getOpsMemoryDevices = ((), (omniORB.typeMapping["IDL:IMEM/OpsMemoryDevices:1.0"], ), None)
MemoryServer._d_getDeviceDefinition = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:IMEM/DeviceDefinition:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice})
MemoryServer._d_getMemoryBlocks = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:IMEM/MemoryBlocks:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice})
MemoryServer._d_getBlockDefinition = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"]), (omniORB.typeMapping["IDL:IMEM/BlockDefinition:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock})
MemoryServer._d_getBlockDescription = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"]), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock})
MemoryServer._d_getFileContents = ((omniORB.typeMapping["IDL:IMEM/File:1.0"], ), ((omniORB.tcInternal.tv_string,0), ), None)
MemoryServer._d_setFileContents = ((omniORB.typeMapping["IDL:IMEM/File:1.0"], (omniORB.tcInternal.tv_string,0)), (), {_0_IMEM.SaveStackFileFailure._NP_RepositoryId: _0_IMEM._d_SaveStackFileFailure})
MemoryServer._d_getImages = ((omniORB.typeMapping["IDL:IMEM/MemoryDevice:1.0"], ), (omniORB.typeMapping["IDL:IMEM/MemoryImages:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice})
MemoryServer._d_saveImage = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"]), (), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.ImageSaveFailure._NP_RepositoryId: _0_IMEM._d_ImageSaveFailure})
MemoryServer._d_deleteImage = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], ), (), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.ImageDeleteFailure._NP_RepositoryId: _0_IMEM._d_ImageDeleteFailure})
MemoryServer._d_importImage = ((omniORB.typeMapping["IDL:IMEM/File:1.0"], ), (), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidFile._NP_RepositoryId: _0_IMEM._d_InvalidFile})
MemoryServer._d_exportImage = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/File:1.0"]), (), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidFile._NP_RepositoryId: _0_IMEM._d_InvalidFile})
MemoryServer._d_copyAbsoluteImageData = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.ImageSaveFailure._NP_RepositoryId: _0_IMEM._d_ImageSaveFailure, _0_IMEM.InvalidAddress._NP_RepositoryId: _0_IMEM._d_InvalidAddress})
MemoryServer._d_copyRelativeImageData = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"]), (), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.ImageSaveFailure._NP_RepositoryId: _0_IMEM._d_ImageSaveFailure, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter})
MemoryServer._d_generateAbsoluteReport = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:IMEM/Format:1.0"]), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidAddress._NP_RepositoryId: _0_IMEM._d_InvalidAddress, _0_IMEM.InvalidFormat._NP_RepositoryId: _0_IMEM._d_InvalidFormat})
MemoryServer._d_generateRelativeReport = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/Format:1.0"]), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter})
MemoryServer._d_compareAbsoluteImages = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:IMEM/Format:1.0"]), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidAddress._NP_RepositoryId: _0_IMEM._d_InvalidAddress, _0_IMEM.InvalidFormat._NP_RepositoryId: _0_IMEM._d_InvalidFormat})
MemoryServer._d_compareRelativeImages = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/Format:1.0"]), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidAddress._NP_RepositoryId: _0_IMEM._d_InvalidAddress, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock})
MemoryServer._d_generateOffsetRelativeReport = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/Format:1.0"]), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter, _0_IMEM.InvalidFormat._NP_RepositoryId: _0_IMEM._d_InvalidFormat})
MemoryServer._d_getRelativeImageValue = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/Format:1.0"]), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter, _0_IMEM.InvalidFormat._NP_RepositoryId: _0_IMEM._d_InvalidFormat})
MemoryServer._d_getRelativeImageDescription = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/Format:1.0"]), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter, _0_IMEM.InvalidFormat._NP_RepositoryId: _0_IMEM._d_InvalidFormat})
MemoryServer._d_generateAbsoluteDataUploadStack = ((omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:IMEM/RawData:1.0"], omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:IMEM/File:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"]), (omniORB.typeMapping["IDL:IMEM/File:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.InvalidAddress._NP_RepositoryId: _0_IMEM._d_InvalidAddress, _0_IMEM.SaveStackFileFailure._NP_RepositoryId: _0_IMEM._d_SaveStackFileFailure, _0_IMEM.ImageSaveFailure._NP_RepositoryId: _0_IMEM._d_ImageSaveFailure})
MemoryServer._d_generateRelativeDataUploadStack = ((omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterValues:1.0"], omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:IMEM/File:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"]), (omniORB.typeMapping["IDL:IMEM/File:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter, _0_IMEM.InvalidValue._NP_RepositoryId: _0_IMEM._d_InvalidValue, _0_IMEM.InvalidFormat._NP_RepositoryId: _0_IMEM._d_InvalidFormat, _0_IMEM.SaveStackFileFailure._NP_RepositoryId: _0_IMEM._d_SaveStackFileFailure, _0_IMEM.ImageSaveFailure._NP_RepositoryId: _0_IMEM._d_ImageSaveFailure})
MemoryServer._d_generateAbsoluteImageUploadStack = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:IMEM/File:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"]), (omniORB.typeMapping["IDL:IMEM/File:1.0"], ), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidAddress._NP_RepositoryId: _0_IMEM._d_InvalidAddress, _0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.SaveStackFileFailure._NP_RepositoryId: _0_IMEM._d_SaveStackFileFailure, _0_IMEM.ImageSaveFailure._NP_RepositoryId: _0_IMEM._d_ImageSaveFailure})
MemoryServer._d_generateRelativeImageUploadStack = ((omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:IMEM/File:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"]), (omniORB.typeMapping["IDL:IMEM/File:1.0"], ), {_0_IMEM.InvalidImage._NP_RepositoryId: _0_IMEM._d_InvalidImage, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter, _0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.SaveStackFileFailure._NP_RepositoryId: _0_IMEM._d_SaveStackFileFailure, _0_IMEM.ImageSaveFailure._NP_RepositoryId: _0_IMEM._d_ImageSaveFailure})
MemoryServer._d_generateAbsoluteDataTransferStack = ((omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:IMEM/File:1.0"]), (omniORB.typeMapping["IDL:IMEM/File:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.InvalidAddress._NP_RepositoryId: _0_IMEM._d_InvalidAddress, _0_IMEM.SaveStackFileFailure._NP_RepositoryId: _0_IMEM._d_SaveStackFileFailure})
MemoryServer._d_generateRelativeDataTransferStack = ((omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryBlock:1.0"], omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], omniORB.typeMapping["IDL:IMEM/File:1.0"]), (omniORB.typeMapping["IDL:IMEM/File:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter, _0_IMEM.SaveStackFileFailure._NP_RepositoryId: _0_IMEM._d_SaveStackFileFailure})
MemoryServer._d_getDwellConfigurationDetails = ((), (omniORB.typeMapping["IDL:IMEM/Strings:1.0"], ), None)
MemoryServer._d_getOpsDwellDevices = ((), (omniORB.typeMapping["IDL:IMEM/OpsMemoryDevices:1.0"], ), None)
MemoryServer._d_getDwellCustomModes = ((), (omniORB.typeMapping["IDL:IMEM/Strings:1.0"], ), None)
MemoryServer._d_getDwellSources = ((omniORB.typeMapping["IDL:IMEM/ChannelMode:1.0"], ), (omniORB.typeMapping["IDL:IMEM/Strings:1.0"], ), None)
MemoryServer._d_getDwellCustomDetails = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:IMEM/CustomChannelDetails:1.0"], ), None)
MemoryServer._d_generateDwellStack = ((omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], omniORB.typeMapping["IDL:IMEM/ChannelsConfiguration:1.0"], omniORB.typeMapping["IDL:IMEM/File:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"]), (omniORB.typeMapping["IDL:IMEM/File:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.InvalidChannel._NP_RepositoryId: _0_IMEM._d_InvalidChannel, _0_IMEM.InvalidChannelMode._NP_RepositoryId: _0_IMEM._d_InvalidChannelMode, _0_IMEM.InvalidAddress._NP_RepositoryId: _0_IMEM._d_InvalidAddress, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter, _0_IMEM.SaveStackFileFailure._NP_RepositoryId: _0_IMEM._d_SaveStackFileFailure, _0_IMEM.ImageSaveFailure._NP_RepositoryId: _0_IMEM._d_ImageSaveFailure})
MemoryServer._d_generateDumpStack = ((omniORB.typeMapping["IDL:IMEM/OpsMemoryDevice:1.0"], omniORB.typeMapping["IDL:IMEM/ChannelsConfiguration:1.0"], omniORB.typeMapping["IDL:IMEM/File:1.0"], omniORB.typeMapping["IDL:IMEM/MemoryImage:1.0"]), (omniORB.typeMapping["IDL:IMEM/File:1.0"], ), {_0_IMEM.InvalidDevice._NP_RepositoryId: _0_IMEM._d_InvalidDevice, _0_IMEM.InvalidChannel._NP_RepositoryId: _0_IMEM._d_InvalidChannel, _0_IMEM.InvalidChannelMode._NP_RepositoryId: _0_IMEM._d_InvalidChannelMode, _0_IMEM.InvalidAddress._NP_RepositoryId: _0_IMEM._d_InvalidAddress, _0_IMEM.InvalidBlock._NP_RepositoryId: _0_IMEM._d_InvalidBlock, _0_IMEM.SaveStackFileFailure._NP_RepositoryId: _0_IMEM._d_SaveStackFileFailure, _0_IMEM.ImageSaveFailure._NP_RepositoryId: _0_IMEM._d_ImageSaveFailure})
MemoryServer._d_getParameterDescription = ((omniORB.typeMapping["IDL:IMEM/ParameterName:1.0"], ), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidParameter._NP_RepositoryId: _0_IMEM._d_InvalidParameter})
MemoryServer._d_getTelecommandDescription = ((omniORB.typeMapping["IDL:IMEM/TelecommadName:1.0"], ), ((omniORB.tcInternal.tv_string,0), ), {_0_IMEM.InvalidTelecommand._NP_RepositoryId: _0_IMEM._d_InvalidTelecommand})

# MemoryServer object reference
class _objref_MemoryServer (CORBA.Object):
    _NP_RepositoryId = MemoryServer._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getMemoryDevices(self, *args):
        return _omnipy.invoke(self, "getMemoryDevices", _0_IMEM.MemoryServer._d_getMemoryDevices, args)

    def getOpsMemoryDevices(self, *args):
        return _omnipy.invoke(self, "getOpsMemoryDevices", _0_IMEM.MemoryServer._d_getOpsMemoryDevices, args)

    def getDeviceDefinition(self, *args):
        return _omnipy.invoke(self, "getDeviceDefinition", _0_IMEM.MemoryServer._d_getDeviceDefinition, args)

    def getMemoryBlocks(self, *args):
        return _omnipy.invoke(self, "getMemoryBlocks", _0_IMEM.MemoryServer._d_getMemoryBlocks, args)

    def getBlockDefinition(self, *args):
        return _omnipy.invoke(self, "getBlockDefinition", _0_IMEM.MemoryServer._d_getBlockDefinition, args)

    def getBlockDescription(self, *args):
        return _omnipy.invoke(self, "getBlockDescription", _0_IMEM.MemoryServer._d_getBlockDescription, args)

    def getFileContents(self, *args):
        return _omnipy.invoke(self, "getFileContents", _0_IMEM.MemoryServer._d_getFileContents, args)

    def setFileContents(self, *args):
        return _omnipy.invoke(self, "setFileContents", _0_IMEM.MemoryServer._d_setFileContents, args)

    def getImages(self, *args):
        return _omnipy.invoke(self, "getImages", _0_IMEM.MemoryServer._d_getImages, args)

    def saveImage(self, *args):
        return _omnipy.invoke(self, "saveImage", _0_IMEM.MemoryServer._d_saveImage, args)

    def deleteImage(self, *args):
        return _omnipy.invoke(self, "deleteImage", _0_IMEM.MemoryServer._d_deleteImage, args)

    def importImage(self, *args):
        return _omnipy.invoke(self, "importImage", _0_IMEM.MemoryServer._d_importImage, args)

    def exportImage(self, *args):
        return _omnipy.invoke(self, "exportImage", _0_IMEM.MemoryServer._d_exportImage, args)

    def copyAbsoluteImageData(self, *args):
        return _omnipy.invoke(self, "copyAbsoluteImageData", _0_IMEM.MemoryServer._d_copyAbsoluteImageData, args)

    def copyRelativeImageData(self, *args):
        return _omnipy.invoke(self, "copyRelativeImageData", _0_IMEM.MemoryServer._d_copyRelativeImageData, args)

    def generateAbsoluteReport(self, *args):
        return _omnipy.invoke(self, "generateAbsoluteReport", _0_IMEM.MemoryServer._d_generateAbsoluteReport, args)

    def generateRelativeReport(self, *args):
        return _omnipy.invoke(self, "generateRelativeReport", _0_IMEM.MemoryServer._d_generateRelativeReport, args)

    def compareAbsoluteImages(self, *args):
        return _omnipy.invoke(self, "compareAbsoluteImages", _0_IMEM.MemoryServer._d_compareAbsoluteImages, args)

    def compareRelativeImages(self, *args):
        return _omnipy.invoke(self, "compareRelativeImages", _0_IMEM.MemoryServer._d_compareRelativeImages, args)

    def generateOffsetRelativeReport(self, *args):
        return _omnipy.invoke(self, "generateOffsetRelativeReport", _0_IMEM.MemoryServer._d_generateOffsetRelativeReport, args)

    def getRelativeImageValue(self, *args):
        return _omnipy.invoke(self, "getRelativeImageValue", _0_IMEM.MemoryServer._d_getRelativeImageValue, args)

    def getRelativeImageDescription(self, *args):
        return _omnipy.invoke(self, "getRelativeImageDescription", _0_IMEM.MemoryServer._d_getRelativeImageDescription, args)

    def generateAbsoluteDataUploadStack(self, *args):
        return _omnipy.invoke(self, "generateAbsoluteDataUploadStack", _0_IMEM.MemoryServer._d_generateAbsoluteDataUploadStack, args)

    def generateRelativeDataUploadStack(self, *args):
        return _omnipy.invoke(self, "generateRelativeDataUploadStack", _0_IMEM.MemoryServer._d_generateRelativeDataUploadStack, args)

    def generateAbsoluteImageUploadStack(self, *args):
        return _omnipy.invoke(self, "generateAbsoluteImageUploadStack", _0_IMEM.MemoryServer._d_generateAbsoluteImageUploadStack, args)

    def generateRelativeImageUploadStack(self, *args):
        return _omnipy.invoke(self, "generateRelativeImageUploadStack", _0_IMEM.MemoryServer._d_generateRelativeImageUploadStack, args)

    def generateAbsoluteDataTransferStack(self, *args):
        return _omnipy.invoke(self, "generateAbsoluteDataTransferStack", _0_IMEM.MemoryServer._d_generateAbsoluteDataTransferStack, args)

    def generateRelativeDataTransferStack(self, *args):
        return _omnipy.invoke(self, "generateRelativeDataTransferStack", _0_IMEM.MemoryServer._d_generateRelativeDataTransferStack, args)

    def getDwellConfigurationDetails(self, *args):
        return _omnipy.invoke(self, "getDwellConfigurationDetails", _0_IMEM.MemoryServer._d_getDwellConfigurationDetails, args)

    def getOpsDwellDevices(self, *args):
        return _omnipy.invoke(self, "getOpsDwellDevices", _0_IMEM.MemoryServer._d_getOpsDwellDevices, args)

    def getDwellCustomModes(self, *args):
        return _omnipy.invoke(self, "getDwellCustomModes", _0_IMEM.MemoryServer._d_getDwellCustomModes, args)

    def getDwellSources(self, *args):
        return _omnipy.invoke(self, "getDwellSources", _0_IMEM.MemoryServer._d_getDwellSources, args)

    def getDwellCustomDetails(self, *args):
        return _omnipy.invoke(self, "getDwellCustomDetails", _0_IMEM.MemoryServer._d_getDwellCustomDetails, args)

    def generateDwellStack(self, *args):
        return _omnipy.invoke(self, "generateDwellStack", _0_IMEM.MemoryServer._d_generateDwellStack, args)

    def generateDumpStack(self, *args):
        return _omnipy.invoke(self, "generateDumpStack", _0_IMEM.MemoryServer._d_generateDumpStack, args)

    def getParameterDescription(self, *args):
        return _omnipy.invoke(self, "getParameterDescription", _0_IMEM.MemoryServer._d_getParameterDescription, args)

    def getTelecommandDescription(self, *args):
        return _omnipy.invoke(self, "getTelecommandDescription", _0_IMEM.MemoryServer._d_getTelecommandDescription, args)

    __methods__ = ["getMemoryDevices", "getOpsMemoryDevices", "getDeviceDefinition", "getMemoryBlocks", "getBlockDefinition", "getBlockDescription", "getFileContents", "setFileContents", "getImages", "saveImage", "deleteImage", "importImage", "exportImage", "copyAbsoluteImageData", "copyRelativeImageData", "generateAbsoluteReport", "generateRelativeReport", "compareAbsoluteImages", "compareRelativeImages", "generateOffsetRelativeReport", "getRelativeImageValue", "getRelativeImageDescription", "generateAbsoluteDataUploadStack", "generateRelativeDataUploadStack", "generateAbsoluteImageUploadStack", "generateRelativeImageUploadStack", "generateAbsoluteDataTransferStack", "generateRelativeDataTransferStack", "getDwellConfigurationDetails", "getOpsDwellDevices", "getDwellCustomModes", "getDwellSources", "getDwellCustomDetails", "generateDwellStack", "generateDumpStack", "getParameterDescription", "getTelecommandDescription"] + CORBA.Object.__methods__

omniORB.registerObjref(MemoryServer._NP_RepositoryId, _objref_MemoryServer)
_0_IMEM._objref_MemoryServer = _objref_MemoryServer
del MemoryServer, _objref_MemoryServer

# MemoryServer skeleton
__name__ = "spell.lib.hifly.interface.IMEM__POA"
class MemoryServer (PortableServer.Servant):
    _NP_RepositoryId = _0_IMEM.MemoryServer._NP_RepositoryId


    _omni_op_d = {"getMemoryDevices": _0_IMEM.MemoryServer._d_getMemoryDevices, "getOpsMemoryDevices": _0_IMEM.MemoryServer._d_getOpsMemoryDevices, "getDeviceDefinition": _0_IMEM.MemoryServer._d_getDeviceDefinition, "getMemoryBlocks": _0_IMEM.MemoryServer._d_getMemoryBlocks, "getBlockDefinition": _0_IMEM.MemoryServer._d_getBlockDefinition, "getBlockDescription": _0_IMEM.MemoryServer._d_getBlockDescription, "getFileContents": _0_IMEM.MemoryServer._d_getFileContents, "setFileContents": _0_IMEM.MemoryServer._d_setFileContents, "getImages": _0_IMEM.MemoryServer._d_getImages, "saveImage": _0_IMEM.MemoryServer._d_saveImage, "deleteImage": _0_IMEM.MemoryServer._d_deleteImage, "importImage": _0_IMEM.MemoryServer._d_importImage, "exportImage": _0_IMEM.MemoryServer._d_exportImage, "copyAbsoluteImageData": _0_IMEM.MemoryServer._d_copyAbsoluteImageData, "copyRelativeImageData": _0_IMEM.MemoryServer._d_copyRelativeImageData, "generateAbsoluteReport": _0_IMEM.MemoryServer._d_generateAbsoluteReport, "generateRelativeReport": _0_IMEM.MemoryServer._d_generateRelativeReport, "compareAbsoluteImages": _0_IMEM.MemoryServer._d_compareAbsoluteImages, "compareRelativeImages": _0_IMEM.MemoryServer._d_compareRelativeImages, "generateOffsetRelativeReport": _0_IMEM.MemoryServer._d_generateOffsetRelativeReport, "getRelativeImageValue": _0_IMEM.MemoryServer._d_getRelativeImageValue, "getRelativeImageDescription": _0_IMEM.MemoryServer._d_getRelativeImageDescription, "generateAbsoluteDataUploadStack": _0_IMEM.MemoryServer._d_generateAbsoluteDataUploadStack, "generateRelativeDataUploadStack": _0_IMEM.MemoryServer._d_generateRelativeDataUploadStack, "generateAbsoluteImageUploadStack": _0_IMEM.MemoryServer._d_generateAbsoluteImageUploadStack, "generateRelativeImageUploadStack": _0_IMEM.MemoryServer._d_generateRelativeImageUploadStack, "generateAbsoluteDataTransferStack": _0_IMEM.MemoryServer._d_generateAbsoluteDataTransferStack, "generateRelativeDataTransferStack": _0_IMEM.MemoryServer._d_generateRelativeDataTransferStack, "getDwellConfigurationDetails": _0_IMEM.MemoryServer._d_getDwellConfigurationDetails, "getOpsDwellDevices": _0_IMEM.MemoryServer._d_getOpsDwellDevices, "getDwellCustomModes": _0_IMEM.MemoryServer._d_getDwellCustomModes, "getDwellSources": _0_IMEM.MemoryServer._d_getDwellSources, "getDwellCustomDetails": _0_IMEM.MemoryServer._d_getDwellCustomDetails, "generateDwellStack": _0_IMEM.MemoryServer._d_generateDwellStack, "generateDumpStack": _0_IMEM.MemoryServer._d_generateDumpStack, "getParameterDescription": _0_IMEM.MemoryServer._d_getParameterDescription, "getTelecommandDescription": _0_IMEM.MemoryServer._d_getTelecommandDescription}

MemoryServer._omni_skeleton = MemoryServer
_0_IMEM__POA.MemoryServer = MemoryServer
omniORB.registerSkeleton(MemoryServer._NP_RepositoryId, MemoryServer)
del MemoryServer
__name__ = "spell.lib.hifly.interface.IMEM"

#
# End of module "IMEM"
#
__name__ = "spell.lib.hifly.interface.IMEM_idl"

_exported_modules = ( "spell.lib.hifly.interface.IMEM", )

# The end.
