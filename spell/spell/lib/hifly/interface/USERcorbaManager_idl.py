# Python stubs generated by omniidl from USERcorbaManager.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "_GlobalIDL"
#
__name__ = "spell.lib.hifly.interface._GlobalIDL"
_0__GlobalIDL = omniORB.openModule("spell.lib.hifly.interface._GlobalIDL", r"USERcorbaManager.idl")
_0__GlobalIDL__POA = omniORB.openModule("spell.lib.hifly.interface._GlobalIDL__POA", r"USERcorbaManager.idl")

# #include "USER/USERcorbaTypes.idl"
import spell.lib.hifly.interface.USERcorbaTypes_idl
# #include "USER/USERcorbaNotificationSource.idl"
import spell.lib.hifly.interface.USERcorbaNotificationSource_idl
# #include "USER/USERcorbaSession.idl"
import spell.lib.hifly.interface.USERcorbaSession_idl

# interface USERcorbaManager
_0__GlobalIDL._d_USERcorbaManager = (omniORB.tcInternal.tv_objref, "IDL:USERcorbaManager:1.0", "USERcorbaManager")
omniORB.typeMapping["IDL:USERcorbaManager:1.0"] = _0__GlobalIDL._d_USERcorbaManager
_0__GlobalIDL.USERcorbaManager = omniORB.newEmptyClass()
class USERcorbaManager (_0__GlobalIDL.USERcorbaNotificationSource):
    _NP_RepositoryId = _0__GlobalIDL._d_USERcorbaManager[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # enum RejectCode
    RE_OK = omniORB.EnumItem("RE_OK", 0)
    RE_NO_SUCH_USER = omniORB.EnumItem("RE_NO_SUCH_USER", 1)
    RE_NO_SUCH_WS = omniORB.EnumItem("RE_NO_SUCH_WS", 2)
    RE_NO_SUCH_ROLE = omniORB.EnumItem("RE_NO_SUCH_ROLE", 3)
    RE_CANT_HAVE_ROLE = omniORB.EnumItem("RE_CANT_HAVE_ROLE", 4)
    RE_ROLE_IN_USE = omniORB.EnumItem("RE_ROLE_IN_USE", 5)
    RE_LOGGED_ON = omniORB.EnumItem("RE_LOGGED_ON", 6)
    RE_NOT_LOGGED_ON = omniORB.EnumItem("RE_NOT_LOGGED_ON", 7)
    RE_BAD_PASSWORD = omniORB.EnumItem("RE_BAD_PASSWORD", 8)
    RE_BAD_PASSWORD_II = omniORB.EnumItem("RE_BAD_PASSWORD_II", 9)
    RE_UNKNOWN = omniORB.EnumItem("RE_UNKNOWN", 10)
    RejectCode = omniORB.Enum("IDL:USERcorbaManager/RejectCode:1.0", (RE_OK, RE_NO_SUCH_USER, RE_NO_SUCH_WS, RE_NO_SUCH_ROLE, RE_CANT_HAVE_ROLE, RE_ROLE_IN_USE, RE_LOGGED_ON, RE_NOT_LOGGED_ON, RE_BAD_PASSWORD, RE_BAD_PASSWORD_II, RE_UNKNOWN,))

    _d_RejectCode  = (omniORB.tcInternal.tv_enum, RejectCode._NP_RepositoryId, "RejectCode", RejectCode._items)
    _tc_RejectCode = omniORB.tcInternal.createTypeCode(_d_RejectCode)
    omniORB.registerType(RejectCode._NP_RepositoryId, _d_RejectCode, _tc_RejectCode)
    
    # exception USERexceptionReject
    _0__GlobalIDL.USERcorbaManager.USERexceptionReject = omniORB.newEmptyClass()
    class USERexceptionReject (CORBA.UserException):
        _NP_RepositoryId = "IDL:USERcorbaManager/USERexceptionReject:1.0"

        _NP_ClassName = "_GlobalIDL.USERcorbaManager.USERexceptionReject"

        def __init__(self, reason, rc):
            CORBA.UserException.__init__(self, reason, rc)
            self.reason = reason
            self.rc = rc
    
    _d_USERexceptionReject  = (omniORB.tcInternal.tv_except, USERexceptionReject, USERexceptionReject._NP_RepositoryId, "USERexceptionReject", "reason", (omniORB.tcInternal.tv_string,0), "rc", omniORB.typeMapping["IDL:USERcorbaManager/RejectCode:1.0"])
    _tc_USERexceptionReject = omniORB.tcInternal.createTypeCode(_d_USERexceptionReject)
    omniORB.registerType(USERexceptionReject._NP_RepositoryId, _d_USERexceptionReject, _tc_USERexceptionReject)


_0__GlobalIDL.USERcorbaManager = USERcorbaManager
_0__GlobalIDL._tc_USERcorbaManager = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_USERcorbaManager)
omniORB.registerType(USERcorbaManager._NP_RepositoryId, _0__GlobalIDL._d_USERcorbaManager, _0__GlobalIDL._tc_USERcorbaManager)

# USERcorbaManager operations and attributes
USERcorbaManager._d_getSessions = ((omniORB.tcInternal.tv_short, ), (omniORB.typeMapping["IDL:USERcorbaSessionSequence:1.0"], ), None)
USERcorbaManager._d_getUserSessions = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:USERcorbaSessionSequence:1.0"], ), None)
USERcorbaManager._d_getRoleSession = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:USERcorbaSession:1.0"], ), None)
USERcorbaManager._d_getWsSession = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:USERcorbaNotifier:1.0"]), (omniORB.typeMapping["IDL:USERcorbaSession:1.0"], ), None)
USERcorbaManager._d_getPermittedDomains = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:USERcorbaStringSequence:1.0"], ), {_0__GlobalIDL.USERcorbaManager.USERexceptionReject._NP_RepositoryId: _0__GlobalIDL.USERcorbaManager._d_USERexceptionReject})
USERcorbaManager._d_getPermittedRoleNames = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:USERcorbaStringSequence:1.0"], (omniORB.tcInternal.tv_string,0)), None)
USERcorbaManager._d_getProfileNames = ((), (omniORB.typeMapping["IDL:USERcorbaStringSequence:1.0"], ), None)
USERcorbaManager._d_logOn = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:USERcorbaSession:1.0"], ), {_0__GlobalIDL.USERcorbaManager.USERexceptionReject._NP_RepositoryId: _0__GlobalIDL.USERcorbaManager._d_USERexceptionReject})
USERcorbaManager._d_logOnWorkSpace = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_long), (omniORB.typeMapping["IDL:USERcorbaSession:1.0"], ), {_0__GlobalIDL.USERcorbaManager.USERexceptionReject._NP_RepositoryId: _0__GlobalIDL.USERcorbaManager._d_USERexceptionReject})
USERcorbaManager._d_logOff = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_short, ), None)
USERcorbaManager._d_numberOpenedAplications = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_short, ), None)
USERcorbaManager._d_logOffForce = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_short, ), None)
USERcorbaManager._d_handOverSession = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), {_0__GlobalIDL.USERcorbaManager.USERexceptionReject._NP_RepositoryId: _0__GlobalIDL.USERcorbaManager._d_USERexceptionReject})
USERcorbaManager._d_changePassword = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_short, ), {_0__GlobalIDL.USERcorbaManager.USERexceptionReject._NP_RepositoryId: _0__GlobalIDL.USERcorbaManager._d_USERexceptionReject})
USERcorbaManager._d_donatePrivileges = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:USERcorbaStringSequence:1.0"], omniORB.typeMapping["IDL:USERcorbaStringSequence:1.0"]), None, None)
USERcorbaManager._d_recoverPrivileges = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:USERcorbaPrivDataSequence:1.0"]), None, None)
USERcorbaManager._d_forceSession = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), {_0__GlobalIDL.USERcorbaManager.USERexceptionReject._NP_RepositoryId: _0__GlobalIDL.USERcorbaManager._d_USERexceptionReject})
USERcorbaManager._d_nullOperation = ((), None, None)

# USERcorbaManager object reference
class _objref_USERcorbaManager (_0__GlobalIDL._objref_USERcorbaNotificationSource):
    _NP_RepositoryId = USERcorbaManager._NP_RepositoryId

    def __init__(self):
        _0__GlobalIDL._objref_USERcorbaNotificationSource.__init__(self)

    def getSessions(self, *args):
        return _omnipy.invoke(self, "getSessions", _0__GlobalIDL.USERcorbaManager._d_getSessions, args)

    def getUserSessions(self, *args):
        return _omnipy.invoke(self, "getUserSessions", _0__GlobalIDL.USERcorbaManager._d_getUserSessions, args)

    def getRoleSession(self, *args):
        return _omnipy.invoke(self, "getRoleSession", _0__GlobalIDL.USERcorbaManager._d_getRoleSession, args)

    def getWsSession(self, *args):
        return _omnipy.invoke(self, "getWsSession", _0__GlobalIDL.USERcorbaManager._d_getWsSession, args)

    def getPermittedDomains(self, *args):
        return _omnipy.invoke(self, "getPermittedDomains", _0__GlobalIDL.USERcorbaManager._d_getPermittedDomains, args)

    def getPermittedRoleNames(self, *args):
        return _omnipy.invoke(self, "getPermittedRoleNames", _0__GlobalIDL.USERcorbaManager._d_getPermittedRoleNames, args)

    def getProfileNames(self, *args):
        return _omnipy.invoke(self, "getProfileNames", _0__GlobalIDL.USERcorbaManager._d_getProfileNames, args)

    def logOn(self, *args):
        return _omnipy.invoke(self, "logOn", _0__GlobalIDL.USERcorbaManager._d_logOn, args)

    def logOnWorkSpace(self, *args):
        return _omnipy.invoke(self, "logOnWorkSpace", _0__GlobalIDL.USERcorbaManager._d_logOnWorkSpace, args)

    def logOff(self, *args):
        return _omnipy.invoke(self, "logOff", _0__GlobalIDL.USERcorbaManager._d_logOff, args)

    def numberOpenedAplications(self, *args):
        return _omnipy.invoke(self, "numberOpenedAplications", _0__GlobalIDL.USERcorbaManager._d_numberOpenedAplications, args)

    def logOffForce(self, *args):
        return _omnipy.invoke(self, "logOffForce", _0__GlobalIDL.USERcorbaManager._d_logOffForce, args)

    def handOverSession(self, *args):
        return _omnipy.invoke(self, "handOverSession", _0__GlobalIDL.USERcorbaManager._d_handOverSession, args)

    def changePassword(self, *args):
        return _omnipy.invoke(self, "changePassword", _0__GlobalIDL.USERcorbaManager._d_changePassword, args)

    def donatePrivileges(self, *args):
        return _omnipy.invoke(self, "donatePrivileges", _0__GlobalIDL.USERcorbaManager._d_donatePrivileges, args)

    def recoverPrivileges(self, *args):
        return _omnipy.invoke(self, "recoverPrivileges", _0__GlobalIDL.USERcorbaManager._d_recoverPrivileges, args)

    def forceSession(self, *args):
        return _omnipy.invoke(self, "forceSession", _0__GlobalIDL.USERcorbaManager._d_forceSession, args)

    def nullOperation(self, *args):
        return _omnipy.invoke(self, "nullOperation", _0__GlobalIDL.USERcorbaManager._d_nullOperation, args)

    __methods__ = ["getSessions", "getUserSessions", "getRoleSession", "getWsSession", "getPermittedDomains", "getPermittedRoleNames", "getProfileNames", "logOn", "logOnWorkSpace", "logOff", "numberOpenedAplications", "logOffForce", "handOverSession", "changePassword", "donatePrivileges", "recoverPrivileges", "forceSession", "nullOperation"] + _0__GlobalIDL._objref_USERcorbaNotificationSource.__methods__

omniORB.registerObjref(USERcorbaManager._NP_RepositoryId, _objref_USERcorbaManager)
_0__GlobalIDL._objref_USERcorbaManager = _objref_USERcorbaManager
del USERcorbaManager, _objref_USERcorbaManager

# USERcorbaManager skeleton
__name__ = "spell.lib.hifly.interface._GlobalIDL__POA"
class USERcorbaManager (_0__GlobalIDL__POA.USERcorbaNotificationSource):
    _NP_RepositoryId = _0__GlobalIDL.USERcorbaManager._NP_RepositoryId


    _omni_op_d = {"getSessions": _0__GlobalIDL.USERcorbaManager._d_getSessions, "getUserSessions": _0__GlobalIDL.USERcorbaManager._d_getUserSessions, "getRoleSession": _0__GlobalIDL.USERcorbaManager._d_getRoleSession, "getWsSession": _0__GlobalIDL.USERcorbaManager._d_getWsSession, "getPermittedDomains": _0__GlobalIDL.USERcorbaManager._d_getPermittedDomains, "getPermittedRoleNames": _0__GlobalIDL.USERcorbaManager._d_getPermittedRoleNames, "getProfileNames": _0__GlobalIDL.USERcorbaManager._d_getProfileNames, "logOn": _0__GlobalIDL.USERcorbaManager._d_logOn, "logOnWorkSpace": _0__GlobalIDL.USERcorbaManager._d_logOnWorkSpace, "logOff": _0__GlobalIDL.USERcorbaManager._d_logOff, "numberOpenedAplications": _0__GlobalIDL.USERcorbaManager._d_numberOpenedAplications, "logOffForce": _0__GlobalIDL.USERcorbaManager._d_logOffForce, "handOverSession": _0__GlobalIDL.USERcorbaManager._d_handOverSession, "changePassword": _0__GlobalIDL.USERcorbaManager._d_changePassword, "donatePrivileges": _0__GlobalIDL.USERcorbaManager._d_donatePrivileges, "recoverPrivileges": _0__GlobalIDL.USERcorbaManager._d_recoverPrivileges, "forceSession": _0__GlobalIDL.USERcorbaManager._d_forceSession, "nullOperation": _0__GlobalIDL.USERcorbaManager._d_nullOperation}
    _omni_op_d.update(_0__GlobalIDL__POA.USERcorbaNotificationSource._omni_op_d)

USERcorbaManager._omni_skeleton = USERcorbaManager
_0__GlobalIDL__POA.USERcorbaManager = USERcorbaManager
omniORB.registerSkeleton(USERcorbaManager._NP_RepositoryId, USERcorbaManager)
del USERcorbaManager
__name__ = "spell.lib.hifly.interface._GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "spell.lib.hifly.interface.USERcorbaManager_idl"

_exported_modules = ( "spell.lib.hifly.interface._GlobalIDL", )

# The end.
